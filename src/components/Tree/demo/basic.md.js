webpackJsonp([12,163],{472:function(n,e){"use strict";n.exports={content:{"zh-CN":[],"en-US":[]},meta:{order:0,title:{"zh-CN":"\u57fa\u672c","en-US":"Type"},filename:"src/components/Tree/demo/basic.md",id:"src-components-Tree-demo-basic"},toc:["ul",["li",["a",{href:"#zh-CN"},"zh-CN"]],["li",["a",{href:"#en-US"},"en-US"]]],highlightedCode:["pre",{lang:"jsx",highlighted:'<span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;</span>tree</span> <span class="token attr-name" >:data-source</span><span class="token attr-value" ><span class="token punctuation" >=</span><span class="token punctuation" >"</span>dataSource<span class="token punctuation" >"</span></span><span class="token punctuation" >></span></span><span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;/</span>tree</span><span class="token punctuation" >></span></span>'}],preview:'<tree :data-source="dataSource"></tree>',vueScript:"let treeData = {\n  name: 'My Tree',\n  children: [\n    { name: 'hello' },\n    { name: 'wat' },\n    {\n      name: 'child folder',\n      children: [\n        {\n          name: 'child folder',\n          children: [\n            { name: 'hello' },\n            { name: 'wat' }\n          ]\n        },\n        { name: 'hello' },\n        { name: 'wat' },\n        {\n          name: 'child folder',\n          children: [\n            { name: 'hello' },\n            { name: 'wat' }\n          ]\n        }\n      ]\n    }\n  ]\n}\nnew Vue({\n  el: 'body',\n  components: {\n    tree: atui.Tree\n  },\n  data: {\n    dataSource: treeData\n  }\n})"}}});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL2NvbXBvbmVudHMvVHJlZS9kZW1vL2Jhc2ljLm1kLmpzIiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL1RyZWUvZGVtby9iYXNpYy5tZCJdLCJuYW1lcyI6WyJ3ZWJwYWNrSnNvbnAiLCI0NzIiLCJtb2R1bGUiLCJleHBvcnRzIiwiY29udGVudCIsInpoLUNOIiwiZW4tVVMiLCJtZXRhIiwib3JkZXIiLCJ0aXRsZSIsImZpbGVuYW1lIiwiaWQiLCJ0b2MiLCJocmVmIiwiaGlnaGxpZ2h0ZWRDb2RlIiwibGFuZyIsImhpZ2hsaWdodGVkIiwicHJldmlldyIsInZ1ZVNjcmlwdCJdLCJtYXBwaW5ncyI6IkFBQUFBLGNBQWMsR0FBRyxNQUVYQyxJQUNBLFNBQVNDLEVBQVFDLEdBRXRCLFlDTERELEdBQU9DLFNBQ0xDLFNBQ0VDLFdBQ0FDLFlBRUZDLE1BQ0VDLE1BQVMsRUFDVEMsT0FDRUosUUFBUyxlQUNUQyxRQUFTLFFBRVhJLFNBQVksb0NBQ1pDLEdBQU0sa0NBRVJDLEtBQ0UsTUFFRSxNQUVFLEtBRUVDLEtBQVEsVUFFVixXQUlGLE1BRUUsS0FFRUEsS0FBUSxVQUVWLFdBSU5DLGlCQUNFLE9BRUVDLEtBQVEsTUFDUkMsWUFBZSx1aEJBR25CQyxRQUFXLDBDQUNYQyxVQUFhIiwiZmlsZSI6InNyYy9jb21wb25lbnRzL1RyZWUvZGVtby9iYXNpYy5tZC5qcyIsInNvdXJjZXNDb250ZW50IjpbIndlYnBhY2tKc29ucChbMTIsMTYzXSx7XG5cbi8qKiovIDQ3Mjpcbi8qKiovIGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cykge1xuXG5cdFwidXNlIHN0cmljdFwiO1xuXHRcblx0bW9kdWxlLmV4cG9ydHMgPSB7XG5cdCAgXCJjb250ZW50XCI6IHtcblx0ICAgIFwiemgtQ05cIjogW10sXG5cdCAgICBcImVuLVVTXCI6IFtdXG5cdCAgfSxcblx0ICBcIm1ldGFcIjoge1xuXHQgICAgXCJvcmRlclwiOiAwLFxuXHQgICAgXCJ0aXRsZVwiOiB7XG5cdCAgICAgIFwiemgtQ05cIjogXCLln7rmnKxcIixcblx0ICAgICAgXCJlbi1VU1wiOiBcIlR5cGVcIlxuXHQgICAgfSxcblx0ICAgIFwiZmlsZW5hbWVcIjogXCJzcmMvY29tcG9uZW50cy9UcmVlL2RlbW8vYmFzaWMubWRcIixcblx0ICAgIFwiaWRcIjogXCJzcmMtY29tcG9uZW50cy1UcmVlLWRlbW8tYmFzaWNcIlxuXHQgIH0sXG5cdCAgXCJ0b2NcIjogW1widWxcIiwgW1wibGlcIiwgW1wiYVwiLCB7XG5cdCAgICBcImhyZWZcIjogXCIjemgtQ05cIlxuXHQgIH0sIFwiemgtQ05cIl1dLCBbXCJsaVwiLCBbXCJhXCIsIHtcblx0ICAgIFwiaHJlZlwiOiBcIiNlbi1VU1wiXG5cdCAgfSwgXCJlbi1VU1wiXV1dLFxuXHQgIFwiaGlnaGxpZ2h0ZWRDb2RlXCI6IFtcInByZVwiLCB7XG5cdCAgICBcImxhbmdcIjogXCJqc3hcIixcblx0ICAgIFwiaGlnaGxpZ2h0ZWRcIjogXCI8c3BhbiBjbGFzcz1cXFwidG9rZW4gdGFnXFxcIiA+PHNwYW4gY2xhc3M9XFxcInRva2VuIHRhZ1xcXCIgPjxzcGFuIGNsYXNzPVxcXCJ0b2tlbiBwdW5jdHVhdGlvblxcXCIgPiZsdDs8L3NwYW4+dHJlZTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcInRva2VuIGF0dHItbmFtZVxcXCIgPjpkYXRhLXNvdXJjZTwvc3Bhbj48c3BhbiBjbGFzcz1cXFwidG9rZW4gYXR0ci12YWx1ZVxcXCIgPjxzcGFuIGNsYXNzPVxcXCJ0b2tlbiBwdW5jdHVhdGlvblxcXCIgPj08L3NwYW4+PHNwYW4gY2xhc3M9XFxcInRva2VuIHB1bmN0dWF0aW9uXFxcIiA+XFxcIjwvc3Bhbj5kYXRhU291cmNlPHNwYW4gY2xhc3M9XFxcInRva2VuIHB1bmN0dWF0aW9uXFxcIiA+XFxcIjwvc3Bhbj48L3NwYW4+PHNwYW4gY2xhc3M9XFxcInRva2VuIHB1bmN0dWF0aW9uXFxcIiA+Pjwvc3Bhbj48L3NwYW4+PHNwYW4gY2xhc3M9XFxcInRva2VuIHRhZ1xcXCIgPjxzcGFuIGNsYXNzPVxcXCJ0b2tlbiB0YWdcXFwiID48c3BhbiBjbGFzcz1cXFwidG9rZW4gcHVuY3R1YXRpb25cXFwiID4mbHQ7Lzwvc3Bhbj50cmVlPC9zcGFuPjxzcGFuIGNsYXNzPVxcXCJ0b2tlbiBwdW5jdHVhdGlvblxcXCIgPj48L3NwYW4+PC9zcGFuPlwiXG5cdCAgfV0sXG5cdCAgXCJwcmV2aWV3XCI6IFwiPHRyZWUgOmRhdGEtc291cmNlPVxcXCJkYXRhU291cmNlXFxcIj48L3RyZWU+XCIsXG5cdCAgXCJ2dWVTY3JpcHRcIjogXCJsZXQgdHJlZURhdGEgPSB7XFxuICBuYW1lOiAnTXkgVHJlZScsXFxuICBjaGlsZHJlbjogW1xcbiAgICB7IG5hbWU6ICdoZWxsbycgfSxcXG4gICAgeyBuYW1lOiAnd2F0JyB9LFxcbiAgICB7XFxuICAgICAgbmFtZTogJ2NoaWxkIGZvbGRlcicsXFxuICAgICAgY2hpbGRyZW46IFtcXG4gICAgICAgIHtcXG4gICAgICAgICAgbmFtZTogJ2NoaWxkIGZvbGRlcicsXFxuICAgICAgICAgIGNoaWxkcmVuOiBbXFxuICAgICAgICAgICAgeyBuYW1lOiAnaGVsbG8nIH0sXFxuICAgICAgICAgICAgeyBuYW1lOiAnd2F0JyB9XFxuICAgICAgICAgIF1cXG4gICAgICAgIH0sXFxuICAgICAgICB7IG5hbWU6ICdoZWxsbycgfSxcXG4gICAgICAgIHsgbmFtZTogJ3dhdCcgfSxcXG4gICAgICAgIHtcXG4gICAgICAgICAgbmFtZTogJ2NoaWxkIGZvbGRlcicsXFxuICAgICAgICAgIGNoaWxkcmVuOiBbXFxuICAgICAgICAgICAgeyBuYW1lOiAnaGVsbG8nIH0sXFxuICAgICAgICAgICAgeyBuYW1lOiAnd2F0JyB9XFxuICAgICAgICAgIF1cXG4gICAgICAgIH1cXG4gICAgICBdXFxuICAgIH1cXG4gIF1cXG59XFxubmV3IFZ1ZSh7XFxuICBlbDogJ2JvZHknLFxcbiAgY29tcG9uZW50czoge1xcbiAgICB0cmVlOiBhdHVpLlRyZWVcXG4gIH0sXFxuICBkYXRhOiB7XFxuICAgIGRhdGFTb3VyY2U6IHRyZWVEYXRhXFxuICB9XFxufSlcIlxuXHR9O1xuXG4vKioqLyB9XG5cbn0pO1xuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIHNyYy9jb21wb25lbnRzL1RyZWUvZGVtby9iYXNpYy5tZC5qc1xuICoqLyIsIm1vZHVsZS5leHBvcnRzID0ge1xuICBcImNvbnRlbnRcIjoge1xuICAgIFwiemgtQ05cIjogW10sXG4gICAgXCJlbi1VU1wiOiBbXVxuICB9LFxuICBcIm1ldGFcIjoge1xuICAgIFwib3JkZXJcIjogMCxcbiAgICBcInRpdGxlXCI6IHtcbiAgICAgIFwiemgtQ05cIjogXCLln7rmnKxcIixcbiAgICAgIFwiZW4tVVNcIjogXCJUeXBlXCJcbiAgICB9LFxuICAgIFwiZmlsZW5hbWVcIjogXCJzcmMvY29tcG9uZW50cy9UcmVlL2RlbW8vYmFzaWMubWRcIixcbiAgICBcImlkXCI6IFwic3JjLWNvbXBvbmVudHMtVHJlZS1kZW1vLWJhc2ljXCJcbiAgfSxcbiAgXCJ0b2NcIjogW1xuICAgIFwidWxcIixcbiAgICBbXG4gICAgICBcImxpXCIsXG4gICAgICBbXG4gICAgICAgIFwiYVwiLFxuICAgICAgICB7XG4gICAgICAgICAgXCJocmVmXCI6IFwiI3poLUNOXCJcbiAgICAgICAgfSxcbiAgICAgICAgXCJ6aC1DTlwiXG4gICAgICBdXG4gICAgXSxcbiAgICBbXG4gICAgICBcImxpXCIsXG4gICAgICBbXG4gICAgICAgIFwiYVwiLFxuICAgICAgICB7XG4gICAgICAgICAgXCJocmVmXCI6IFwiI2VuLVVTXCJcbiAgICAgICAgfSxcbiAgICAgICAgXCJlbi1VU1wiXG4gICAgICBdXG4gICAgXVxuICBdLFxuICBcImhpZ2hsaWdodGVkQ29kZVwiOiBbXG4gICAgXCJwcmVcIixcbiAgICB7XG4gICAgICBcImxhbmdcIjogXCJqc3hcIixcbiAgICAgIFwiaGlnaGxpZ2h0ZWRcIjogXCI8c3BhbiBjbGFzcz1cXFwidG9rZW4gdGFnXFxcIiA+PHNwYW4gY2xhc3M9XFxcInRva2VuIHRhZ1xcXCIgPjxzcGFuIGNsYXNzPVxcXCJ0b2tlbiBwdW5jdHVhdGlvblxcXCIgPiZsdDs8L3NwYW4+dHJlZTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcInRva2VuIGF0dHItbmFtZVxcXCIgPjpkYXRhLXNvdXJjZTwvc3Bhbj48c3BhbiBjbGFzcz1cXFwidG9rZW4gYXR0ci12YWx1ZVxcXCIgPjxzcGFuIGNsYXNzPVxcXCJ0b2tlbiBwdW5jdHVhdGlvblxcXCIgPj08L3NwYW4+PHNwYW4gY2xhc3M9XFxcInRva2VuIHB1bmN0dWF0aW9uXFxcIiA+XFxcIjwvc3Bhbj5kYXRhU291cmNlPHNwYW4gY2xhc3M9XFxcInRva2VuIHB1bmN0dWF0aW9uXFxcIiA+XFxcIjwvc3Bhbj48L3NwYW4+PHNwYW4gY2xhc3M9XFxcInRva2VuIHB1bmN0dWF0aW9uXFxcIiA+Pjwvc3Bhbj48L3NwYW4+PHNwYW4gY2xhc3M9XFxcInRva2VuIHRhZ1xcXCIgPjxzcGFuIGNsYXNzPVxcXCJ0b2tlbiB0YWdcXFwiID48c3BhbiBjbGFzcz1cXFwidG9rZW4gcHVuY3R1YXRpb25cXFwiID4mbHQ7Lzwvc3Bhbj50cmVlPC9zcGFuPjxzcGFuIGNsYXNzPVxcXCJ0b2tlbiBwdW5jdHVhdGlvblxcXCIgPj48L3NwYW4+PC9zcGFuPlwiXG4gICAgfVxuICBdLFxuICBcInByZXZpZXdcIjogXCI8dHJlZSA6ZGF0YS1zb3VyY2U9XFxcImRhdGFTb3VyY2VcXFwiPjwvdHJlZT5cIixcbiAgXCJ2dWVTY3JpcHRcIjogXCJsZXQgdHJlZURhdGEgPSB7XFxuICBuYW1lOiAnTXkgVHJlZScsXFxuICBjaGlsZHJlbjogW1xcbiAgICB7IG5hbWU6ICdoZWxsbycgfSxcXG4gICAgeyBuYW1lOiAnd2F0JyB9LFxcbiAgICB7XFxuICAgICAgbmFtZTogJ2NoaWxkIGZvbGRlcicsXFxuICAgICAgY2hpbGRyZW46IFtcXG4gICAgICAgIHtcXG4gICAgICAgICAgbmFtZTogJ2NoaWxkIGZvbGRlcicsXFxuICAgICAgICAgIGNoaWxkcmVuOiBbXFxuICAgICAgICAgICAgeyBuYW1lOiAnaGVsbG8nIH0sXFxuICAgICAgICAgICAgeyBuYW1lOiAnd2F0JyB9XFxuICAgICAgICAgIF1cXG4gICAgICAgIH0sXFxuICAgICAgICB7IG5hbWU6ICdoZWxsbycgfSxcXG4gICAgICAgIHsgbmFtZTogJ3dhdCcgfSxcXG4gICAgICAgIHtcXG4gICAgICAgICAgbmFtZTogJ2NoaWxkIGZvbGRlcicsXFxuICAgICAgICAgIGNoaWxkcmVuOiBbXFxuICAgICAgICAgICAgeyBuYW1lOiAnaGVsbG8nIH0sXFxuICAgICAgICAgICAgeyBuYW1lOiAnd2F0JyB9XFxuICAgICAgICAgIF1cXG4gICAgICAgIH1cXG4gICAgICBdXFxuICAgIH1cXG4gIF1cXG59XFxubmV3IFZ1ZSh7XFxuICBlbDogJ2JvZHknLFxcbiAgY29tcG9uZW50czoge1xcbiAgICB0cmVlOiBhdHVpLlRyZWVcXG4gIH0sXFxuICBkYXRhOiB7XFxuICAgIGRhdGFTb3VyY2U6IHRyZWVEYXRhXFxuICB9XFxufSlcIlxufTtcblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9jb21wb25lbnRzL1RyZWUvZGVtby9iYXNpYy5tZFxuICoqLyJdLCJzb3VyY2VSb290IjoiIn0=