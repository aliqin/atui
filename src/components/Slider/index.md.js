webpackJsonp([50,163],{434:function(t,e){"use strict";t.exports={content:["section",["h2","\u4f55\u65f6\u4f7f\u7528"]],meta:{category:"Components",type:"Form Controls",title:"Slider",subtitle:"\u6ed1\u52a8\u8f93\u5165\u6761",cols:1,filename:"src/components/Slider/index.md"},toc:["ul",["li",["a",{href:"#\u4f55\u65f6\u4f7f\u7528"},"\u4f55\u65f6\u4f7f\u7528"]],["li",["a",{href:"#API"},"API"]]],api:["section",["h2","API"],["table",["thead",["tr",["th","\u5c5e\u6027"],["th","\u8bf4\u660e"],["th","\u7c7b\u578b"],["th","\u9ed8\u8ba4\u503c"]]],["tbody",["tr",["td","value"],["td","\u6ed1\u5757\u7684\u503c\uff0c\u5982\u679c\u4f7f\u7528","[5,10]","\u6216\u8005","['5','10']","\uff0c\u8868\u73b0\u4e3a\u53cc\u6ed1\u5757"],["td","string or number or array"],["td","0"]],["tr",["td","min"],["td","\u6ed1\u5757\u4f4d\u7f6e\u53d6\u503c\u533a\u95f4\u6700\u5c0f\u503c"],["td","string or number"],["td","0"]],["tr",["td","max"],["td","\u6ed1\u5757\u4f4d\u7f6e\u53d6\u503c\u533a\u95f4\u6700\u5927\u503c"],["td","string or number"],["td","100"]]]]]}}});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL2NvbXBvbmVudHMvU2xpZGVyL2luZGV4Lm1kLmpzIiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL1NsaWRlci9pbmRleC5tZCJdLCJuYW1lcyI6WyJ3ZWJwYWNrSnNvbnAiLCI0MzQiLCJtb2R1bGUiLCJleHBvcnRzIiwiY29udGVudCIsIm1ldGEiLCJjYXRlZ29yeSIsInR5cGUiLCJ0aXRsZSIsInN1YnRpdGxlIiwiY29scyIsImZpbGVuYW1lIiwidG9jIiwiaHJlZiIsImFwaSJdLCJtYXBwaW5ncyI6IkFBQUFBLGNBQWMsR0FBRyxNQUVYQyxJQUNBLFNBQVNDLEVBQVFDLEdBRXRCLFlDTERELEdBQU9DLFNBQ0xDLFNBQ0UsV0FFRSxLQUNBLDZCQUdKQyxNQUNFQyxTQUFZLGFBQ1pDLEtBQVEsZ0JBQ1JDLE1BQVMsU0FDVEMsU0FBWSxpQ0FDWkMsS0FBUSxFQUNSQyxTQUFZLGtDQUVkQyxLQUNFLE1BRUUsTUFFRSxLQUVFQyxLQUFRLDZCQUVWLDhCQUlGLE1BRUUsS0FFRUEsS0FBUSxRQUVWLFNBSU5DLEtBQ0UsV0FFRSxLQUNBLFFBR0EsU0FFRSxTQUVFLE1BRUUsS0FDQSxpQkFHQSxLQUNBLGlCQUdBLEtBQ0EsaUJBR0EsS0FDQSx5QkFLSixTQUVFLE1BRUUsS0FDQSxVQUdBLEtBQ0EseURBQ0EsU0FDQSxlQUNBLGFBQ0EsK0NBR0EsS0FDQSw4QkFHQSxLQUNBLE9BSUYsTUFFRSxLQUNBLFFBR0EsS0FDQSx1RUFHQSxLQUNBLHFCQUdBLEtBQ0EsT0FJRixNQUVFLEtBQ0EsUUFHQSxLQUNBLHVFQUdBLEtBQ0EscUJBR0EsS0FDQSIsImZpbGUiOiJzcmMvY29tcG9uZW50cy9TbGlkZXIvaW5kZXgubWQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ3ZWJwYWNrSnNvbnAoWzUwLDE2M10se1xuXG4vKioqLyA0MzQ6XG4vKioqLyBmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMpIHtcblxuXHRcInVzZSBzdHJpY3RcIjtcblx0XG5cdG1vZHVsZS5leHBvcnRzID0ge1xuXHQgIFwiY29udGVudFwiOiBbXCJzZWN0aW9uXCIsIFtcImgyXCIsIFwi5L2V5pe25L2/55SoXCJdXSxcblx0ICBcIm1ldGFcIjoge1xuXHQgICAgXCJjYXRlZ29yeVwiOiBcIkNvbXBvbmVudHNcIixcblx0ICAgIFwidHlwZVwiOiBcIkZvcm0gQ29udHJvbHNcIixcblx0ICAgIFwidGl0bGVcIjogXCJTbGlkZXJcIixcblx0ICAgIFwic3VidGl0bGVcIjogXCLmu5HliqjovpPlhaXmnaFcIixcblx0ICAgIFwiY29sc1wiOiAxLFxuXHQgICAgXCJmaWxlbmFtZVwiOiBcInNyYy9jb21wb25lbnRzL1NsaWRlci9pbmRleC5tZFwiXG5cdCAgfSxcblx0ICBcInRvY1wiOiBbXCJ1bFwiLCBbXCJsaVwiLCBbXCJhXCIsIHtcblx0ICAgIFwiaHJlZlwiOiBcIiPkvZXml7bkvb/nlKhcIlxuXHQgIH0sIFwi5L2V5pe25L2/55SoXCJdXSwgW1wibGlcIiwgW1wiYVwiLCB7XG5cdCAgICBcImhyZWZcIjogXCIjQVBJXCJcblx0ICB9LCBcIkFQSVwiXV1dLFxuXHQgIFwiYXBpXCI6IFtcInNlY3Rpb25cIiwgW1wiaDJcIiwgXCJBUElcIl0sIFtcInRhYmxlXCIsIFtcInRoZWFkXCIsIFtcInRyXCIsIFtcInRoXCIsIFwi5bGe5oCnXCJdLCBbXCJ0aFwiLCBcIuivtOaYjlwiXSwgW1widGhcIiwgXCLnsbvlnotcIl0sIFtcInRoXCIsIFwi6buY6K6k5YC8XCJdXV0sIFtcInRib2R5XCIsIFtcInRyXCIsIFtcInRkXCIsIFwidmFsdWVcIl0sIFtcInRkXCIsIFwi5ruR5Z2X55qE5YC877yM5aaC5p6c5L2/55SoXCIsIFwiWzUsMTBdXCIsIFwi5oiW6ICFXCIsIFwiWyc1JywnMTAnXVwiLCBcIu+8jOihqOeOsOS4uuWPjOa7keWdl1wiXSwgW1widGRcIiwgXCJzdHJpbmcgb3IgbnVtYmVyIG9yIGFycmF5XCJdLCBbXCJ0ZFwiLCBcIjBcIl1dLCBbXCJ0clwiLCBbXCJ0ZFwiLCBcIm1pblwiXSwgW1widGRcIiwgXCLmu5HlnZfkvY3nva7lj5blgLzljLrpl7TmnIDlsI/lgLxcIl0sIFtcInRkXCIsIFwic3RyaW5nIG9yIG51bWJlclwiXSwgW1widGRcIiwgXCIwXCJdXSwgW1widHJcIiwgW1widGRcIiwgXCJtYXhcIl0sIFtcInRkXCIsIFwi5ruR5Z2X5L2N572u5Y+W5YC85Yy66Ze05pyA5aSn5YC8XCJdLCBbXCJ0ZFwiLCBcInN0cmluZyBvciBudW1iZXJcIl0sIFtcInRkXCIsIFwiMTAwXCJdXV1dXVxuXHR9O1xuXG4vKioqLyB9XG5cbn0pO1xuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIHNyYy9jb21wb25lbnRzL1NsaWRlci9pbmRleC5tZC5qc1xuICoqLyIsIm1vZHVsZS5leHBvcnRzID0ge1xuICBcImNvbnRlbnRcIjogW1xuICAgIFwic2VjdGlvblwiLFxuICAgIFtcbiAgICAgIFwiaDJcIixcbiAgICAgIFwi5L2V5pe25L2/55SoXCJcbiAgICBdXG4gIF0sXG4gIFwibWV0YVwiOiB7XG4gICAgXCJjYXRlZ29yeVwiOiBcIkNvbXBvbmVudHNcIixcbiAgICBcInR5cGVcIjogXCJGb3JtIENvbnRyb2xzXCIsXG4gICAgXCJ0aXRsZVwiOiBcIlNsaWRlclwiLFxuICAgIFwic3VidGl0bGVcIjogXCLmu5HliqjovpPlhaXmnaFcIixcbiAgICBcImNvbHNcIjogMSxcbiAgICBcImZpbGVuYW1lXCI6IFwic3JjL2NvbXBvbmVudHMvU2xpZGVyL2luZGV4Lm1kXCJcbiAgfSxcbiAgXCJ0b2NcIjogW1xuICAgIFwidWxcIixcbiAgICBbXG4gICAgICBcImxpXCIsXG4gICAgICBbXG4gICAgICAgIFwiYVwiLFxuICAgICAgICB7XG4gICAgICAgICAgXCJocmVmXCI6IFwiI+S9leaXtuS9v+eUqFwiXG4gICAgICAgIH0sXG4gICAgICAgIFwi5L2V5pe25L2/55SoXCJcbiAgICAgIF1cbiAgICBdLFxuICAgIFtcbiAgICAgIFwibGlcIixcbiAgICAgIFtcbiAgICAgICAgXCJhXCIsXG4gICAgICAgIHtcbiAgICAgICAgICBcImhyZWZcIjogXCIjQVBJXCJcbiAgICAgICAgfSxcbiAgICAgICAgXCJBUElcIlxuICAgICAgXVxuICAgIF1cbiAgXSxcbiAgXCJhcGlcIjogW1xuICAgIFwic2VjdGlvblwiLFxuICAgIFtcbiAgICAgIFwiaDJcIixcbiAgICAgIFwiQVBJXCJcbiAgICBdLFxuICAgIFtcbiAgICAgIFwidGFibGVcIixcbiAgICAgIFtcbiAgICAgICAgXCJ0aGVhZFwiLFxuICAgICAgICBbXG4gICAgICAgICAgXCJ0clwiLFxuICAgICAgICAgIFtcbiAgICAgICAgICAgIFwidGhcIixcbiAgICAgICAgICAgIFwi5bGe5oCnXCJcbiAgICAgICAgICBdLFxuICAgICAgICAgIFtcbiAgICAgICAgICAgIFwidGhcIixcbiAgICAgICAgICAgIFwi6K+05piOXCJcbiAgICAgICAgICBdLFxuICAgICAgICAgIFtcbiAgICAgICAgICAgIFwidGhcIixcbiAgICAgICAgICAgIFwi57G75Z6LXCJcbiAgICAgICAgICBdLFxuICAgICAgICAgIFtcbiAgICAgICAgICAgIFwidGhcIixcbiAgICAgICAgICAgIFwi6buY6K6k5YC8XCJcbiAgICAgICAgICBdXG4gICAgICAgIF1cbiAgICAgIF0sXG4gICAgICBbXG4gICAgICAgIFwidGJvZHlcIixcbiAgICAgICAgW1xuICAgICAgICAgIFwidHJcIixcbiAgICAgICAgICBbXG4gICAgICAgICAgICBcInRkXCIsXG4gICAgICAgICAgICBcInZhbHVlXCJcbiAgICAgICAgICBdLFxuICAgICAgICAgIFtcbiAgICAgICAgICAgIFwidGRcIixcbiAgICAgICAgICAgIFwi5ruR5Z2X55qE5YC877yM5aaC5p6c5L2/55SoXCIsXG4gICAgICAgICAgICBcIls1LDEwXVwiLFxuICAgICAgICAgICAgXCLmiJbogIVcIixcbiAgICAgICAgICAgIFwiWyc1JywnMTAnXVwiLFxuICAgICAgICAgICAgXCLvvIzooajnjrDkuLrlj4zmu5HlnZdcIlxuICAgICAgICAgIF0sXG4gICAgICAgICAgW1xuICAgICAgICAgICAgXCJ0ZFwiLFxuICAgICAgICAgICAgXCJzdHJpbmcgb3IgbnVtYmVyIG9yIGFycmF5XCJcbiAgICAgICAgICBdLFxuICAgICAgICAgIFtcbiAgICAgICAgICAgIFwidGRcIixcbiAgICAgICAgICAgIFwiMFwiXG4gICAgICAgICAgXVxuICAgICAgICBdLFxuICAgICAgICBbXG4gICAgICAgICAgXCJ0clwiLFxuICAgICAgICAgIFtcbiAgICAgICAgICAgIFwidGRcIixcbiAgICAgICAgICAgIFwibWluXCJcbiAgICAgICAgICBdLFxuICAgICAgICAgIFtcbiAgICAgICAgICAgIFwidGRcIixcbiAgICAgICAgICAgIFwi5ruR5Z2X5L2N572u5Y+W5YC85Yy66Ze05pyA5bCP5YC8XCJcbiAgICAgICAgICBdLFxuICAgICAgICAgIFtcbiAgICAgICAgICAgIFwidGRcIixcbiAgICAgICAgICAgIFwic3RyaW5nIG9yIG51bWJlclwiXG4gICAgICAgICAgXSxcbiAgICAgICAgICBbXG4gICAgICAgICAgICBcInRkXCIsXG4gICAgICAgICAgICBcIjBcIlxuICAgICAgICAgIF1cbiAgICAgICAgXSxcbiAgICAgICAgW1xuICAgICAgICAgIFwidHJcIixcbiAgICAgICAgICBbXG4gICAgICAgICAgICBcInRkXCIsXG4gICAgICAgICAgICBcIm1heFwiXG4gICAgICAgICAgXSxcbiAgICAgICAgICBbXG4gICAgICAgICAgICBcInRkXCIsXG4gICAgICAgICAgICBcIua7keWdl+S9jee9ruWPluWAvOWMuumXtOacgOWkp+WAvFwiXG4gICAgICAgICAgXSxcbiAgICAgICAgICBbXG4gICAgICAgICAgICBcInRkXCIsXG4gICAgICAgICAgICBcInN0cmluZyBvciBudW1iZXJcIlxuICAgICAgICAgIF0sXG4gICAgICAgICAgW1xuICAgICAgICAgICAgXCJ0ZFwiLFxuICAgICAgICAgICAgXCIxMDBcIlxuICAgICAgICAgIF1cbiAgICAgICAgXVxuICAgICAgXVxuICAgIF1cbiAgXVxufTtcblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9jb21wb25lbnRzL1NsaWRlci9pbmRleC5tZFxuICoqLyJdLCJzb3VyY2VSb290IjoiIn0=