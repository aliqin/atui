webpackJsonp([39,161],{443:function(t,e){"use strict";t.exports={content:["section",["p","\u6309\u94ae\u7528\u4e8e\u5f00\u59cb\u4e00\u4e2a\u5373\u65f6\u64cd\u4f5c\u3002"],["h2","\u4f55\u65f6\u4f7f\u7528"]],meta:{category:"Components",type:"Form Controls",title:"Switch",subtitle:"\u5f00\u5173",filename:"src/components/Switch/index.md"},toc:["ul",["li",["a",{href:"#\u4f55\u65f6\u4f7f\u7528"},"\u4f55\u65f6\u4f7f\u7528"]],["li",["a",{href:"#API"},"API"]]],api:["section",["h2","API"],["table",["thead",["tr",["th","\u5c5e\u6027"],["th","\u8bf4\u660e"],["th","\u7c7b\u578b"],["th","\u9ed8\u8ba4\u503c"]]],["tbody",["tr",["td","checked"],["td","\u662f\u5426\u9009\u4e2d"],["td","Boolean"],["td"]],["tr",["td","small"],["td","\u5c0f\u578bswitch"],["td","Boolean"],["td"]],["tr",["td","disabled"],["td","\u662f\u5426\u7981\u7528"],["td","Boolean"],["td"]],["tr",["td","color"],["td","\u9009\u4e2d\u65f6\u7684\u80cc\u666f\u8272"],["td","String"],["td"]]]]]}}});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL2NvbXBvbmVudHMvU3dpdGNoL2luZGV4Lm1kLmpzIiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL1N3aXRjaC9pbmRleC5tZCJdLCJuYW1lcyI6WyJ3ZWJwYWNrSnNvbnAiLCI0NDMiLCJtb2R1bGUiLCJleHBvcnRzIiwiY29udGVudCIsIm1ldGEiLCJjYXRlZ29yeSIsInR5cGUiLCJ0aXRsZSIsInN1YnRpdGxlIiwiZmlsZW5hbWUiLCJ0b2MiLCJocmVmIiwiYXBpIl0sIm1hcHBpbmdzIjoiQUFBQUEsY0FBYyxHQUFHLE1BRVhDLElBQ0EsU0FBU0MsRUFBUUMsR0FFdEIsWUNMREQsR0FBT0MsU0FDTEMsU0FDRSxXQUVFLElBQ0EsbUZBR0EsS0FDQSw2QkFHSkMsTUFDRUMsU0FBWSxhQUNaQyxLQUFRLGdCQUNSQyxNQUFTLFNBQ1RDLFNBQVksZUFDWkMsU0FBWSxrQ0FFZEMsS0FDRSxNQUVFLE1BRUUsS0FFRUMsS0FBUSw2QkFFViw4QkFJRixNQUVFLEtBRUVBLEtBQVEsUUFFVixTQUlOQyxLQUNFLFdBRUUsS0FDQSxRQUdBLFNBRUUsU0FFRSxNQUVFLEtBQ0EsaUJBR0EsS0FDQSxpQkFHQSxLQUNBLGlCQUdBLEtBQ0EseUJBS0osU0FFRSxNQUVFLEtBQ0EsWUFHQSxLQUNBLDZCQUdBLEtBQ0EsWUFHQSxRQUlGLE1BRUUsS0FDQSxVQUdBLEtBQ0EsdUJBR0EsS0FDQSxZQUdBLFFBSUYsTUFFRSxLQUNBLGFBR0EsS0FDQSw2QkFHQSxLQUNBLFlBR0EsUUFJRixNQUVFLEtBQ0EsVUFHQSxLQUNBLCtDQUdBLEtBQ0EsV0FHQSIsImZpbGUiOiJzcmMvY29tcG9uZW50cy9Td2l0Y2gvaW5kZXgubWQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ3ZWJwYWNrSnNvbnAoWzM5LDE2MV0se1xuXG4vKioqLyA0NDM6XG4vKioqLyBmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMpIHtcblxuXHRcInVzZSBzdHJpY3RcIjtcblx0XG5cdG1vZHVsZS5leHBvcnRzID0ge1xuXHQgIFwiY29udGVudFwiOiBbXCJzZWN0aW9uXCIsIFtcInBcIiwgXCLmjInpkq7nlKjkuo7lvIDlp4vkuIDkuKrljbPml7bmk43kvZzjgIJcIl0sIFtcImgyXCIsIFwi5L2V5pe25L2/55SoXCJdXSxcblx0ICBcIm1ldGFcIjoge1xuXHQgICAgXCJjYXRlZ29yeVwiOiBcIkNvbXBvbmVudHNcIixcblx0ICAgIFwidHlwZVwiOiBcIkZvcm0gQ29udHJvbHNcIixcblx0ICAgIFwidGl0bGVcIjogXCJTd2l0Y2hcIixcblx0ICAgIFwic3VidGl0bGVcIjogXCLlvIDlhbNcIixcblx0ICAgIFwiZmlsZW5hbWVcIjogXCJzcmMvY29tcG9uZW50cy9Td2l0Y2gvaW5kZXgubWRcIlxuXHQgIH0sXG5cdCAgXCJ0b2NcIjogW1widWxcIiwgW1wibGlcIiwgW1wiYVwiLCB7XG5cdCAgICBcImhyZWZcIjogXCIj5L2V5pe25L2/55SoXCJcblx0ICB9LCBcIuS9leaXtuS9v+eUqFwiXV0sIFtcImxpXCIsIFtcImFcIiwge1xuXHQgICAgXCJocmVmXCI6IFwiI0FQSVwiXG5cdCAgfSwgXCJBUElcIl1dXSxcblx0ICBcImFwaVwiOiBbXCJzZWN0aW9uXCIsIFtcImgyXCIsIFwiQVBJXCJdLCBbXCJ0YWJsZVwiLCBbXCJ0aGVhZFwiLCBbXCJ0clwiLCBbXCJ0aFwiLCBcIuWxnuaAp1wiXSwgW1widGhcIiwgXCLor7TmmI5cIl0sIFtcInRoXCIsIFwi57G75Z6LXCJdLCBbXCJ0aFwiLCBcIum7mOiupOWAvFwiXV1dLCBbXCJ0Ym9keVwiLCBbXCJ0clwiLCBbXCJ0ZFwiLCBcImNoZWNrZWRcIl0sIFtcInRkXCIsIFwi5piv5ZCm6YCJ5LitXCJdLCBbXCJ0ZFwiLCBcIkJvb2xlYW5cIl0sIFtcInRkXCJdXSwgW1widHJcIiwgW1widGRcIiwgXCJzbWFsbFwiXSwgW1widGRcIiwgXCLlsI/lnotzd2l0Y2hcIl0sIFtcInRkXCIsIFwiQm9vbGVhblwiXSwgW1widGRcIl1dLCBbXCJ0clwiLCBbXCJ0ZFwiLCBcImRpc2FibGVkXCJdLCBbXCJ0ZFwiLCBcIuaYr+WQpuemgeeUqFwiXSwgW1widGRcIiwgXCJCb29sZWFuXCJdLCBbXCJ0ZFwiXV0sIFtcInRyXCIsIFtcInRkXCIsIFwiY29sb3JcIl0sIFtcInRkXCIsIFwi6YCJ5Lit5pe255qE6IOM5pmv6ImyXCJdLCBbXCJ0ZFwiLCBcIlN0cmluZ1wiXSwgW1widGRcIl1dXV1dXG5cdH07XG5cbi8qKiovIH1cblxufSk7XG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogc3JjL2NvbXBvbmVudHMvU3dpdGNoL2luZGV4Lm1kLmpzXG4gKiovIiwibW9kdWxlLmV4cG9ydHMgPSB7XG4gIFwiY29udGVudFwiOiBbXG4gICAgXCJzZWN0aW9uXCIsXG4gICAgW1xuICAgICAgXCJwXCIsXG4gICAgICBcIuaMiemSrueUqOS6juW8gOWni+S4gOS4quWNs+aXtuaTjeS9nOOAglwiXG4gICAgXSxcbiAgICBbXG4gICAgICBcImgyXCIsXG4gICAgICBcIuS9leaXtuS9v+eUqFwiXG4gICAgXVxuICBdLFxuICBcIm1ldGFcIjoge1xuICAgIFwiY2F0ZWdvcnlcIjogXCJDb21wb25lbnRzXCIsXG4gICAgXCJ0eXBlXCI6IFwiRm9ybSBDb250cm9sc1wiLFxuICAgIFwidGl0bGVcIjogXCJTd2l0Y2hcIixcbiAgICBcInN1YnRpdGxlXCI6IFwi5byA5YWzXCIsXG4gICAgXCJmaWxlbmFtZVwiOiBcInNyYy9jb21wb25lbnRzL1N3aXRjaC9pbmRleC5tZFwiXG4gIH0sXG4gIFwidG9jXCI6IFtcbiAgICBcInVsXCIsXG4gICAgW1xuICAgICAgXCJsaVwiLFxuICAgICAgW1xuICAgICAgICBcImFcIixcbiAgICAgICAge1xuICAgICAgICAgIFwiaHJlZlwiOiBcIiPkvZXml7bkvb/nlKhcIlxuICAgICAgICB9LFxuICAgICAgICBcIuS9leaXtuS9v+eUqFwiXG4gICAgICBdXG4gICAgXSxcbiAgICBbXG4gICAgICBcImxpXCIsXG4gICAgICBbXG4gICAgICAgIFwiYVwiLFxuICAgICAgICB7XG4gICAgICAgICAgXCJocmVmXCI6IFwiI0FQSVwiXG4gICAgICAgIH0sXG4gICAgICAgIFwiQVBJXCJcbiAgICAgIF1cbiAgICBdXG4gIF0sXG4gIFwiYXBpXCI6IFtcbiAgICBcInNlY3Rpb25cIixcbiAgICBbXG4gICAgICBcImgyXCIsXG4gICAgICBcIkFQSVwiXG4gICAgXSxcbiAgICBbXG4gICAgICBcInRhYmxlXCIsXG4gICAgICBbXG4gICAgICAgIFwidGhlYWRcIixcbiAgICAgICAgW1xuICAgICAgICAgIFwidHJcIixcbiAgICAgICAgICBbXG4gICAgICAgICAgICBcInRoXCIsXG4gICAgICAgICAgICBcIuWxnuaAp1wiXG4gICAgICAgICAgXSxcbiAgICAgICAgICBbXG4gICAgICAgICAgICBcInRoXCIsXG4gICAgICAgICAgICBcIuivtOaYjlwiXG4gICAgICAgICAgXSxcbiAgICAgICAgICBbXG4gICAgICAgICAgICBcInRoXCIsXG4gICAgICAgICAgICBcIuexu+Wei1wiXG4gICAgICAgICAgXSxcbiAgICAgICAgICBbXG4gICAgICAgICAgICBcInRoXCIsXG4gICAgICAgICAgICBcIum7mOiupOWAvFwiXG4gICAgICAgICAgXVxuICAgICAgICBdXG4gICAgICBdLFxuICAgICAgW1xuICAgICAgICBcInRib2R5XCIsXG4gICAgICAgIFtcbiAgICAgICAgICBcInRyXCIsXG4gICAgICAgICAgW1xuICAgICAgICAgICAgXCJ0ZFwiLFxuICAgICAgICAgICAgXCJjaGVja2VkXCJcbiAgICAgICAgICBdLFxuICAgICAgICAgIFtcbiAgICAgICAgICAgIFwidGRcIixcbiAgICAgICAgICAgIFwi5piv5ZCm6YCJ5LitXCJcbiAgICAgICAgICBdLFxuICAgICAgICAgIFtcbiAgICAgICAgICAgIFwidGRcIixcbiAgICAgICAgICAgIFwiQm9vbGVhblwiXG4gICAgICAgICAgXSxcbiAgICAgICAgICBbXG4gICAgICAgICAgICBcInRkXCJcbiAgICAgICAgICBdXG4gICAgICAgIF0sXG4gICAgICAgIFtcbiAgICAgICAgICBcInRyXCIsXG4gICAgICAgICAgW1xuICAgICAgICAgICAgXCJ0ZFwiLFxuICAgICAgICAgICAgXCJzbWFsbFwiXG4gICAgICAgICAgXSxcbiAgICAgICAgICBbXG4gICAgICAgICAgICBcInRkXCIsXG4gICAgICAgICAgICBcIuWwj+Wei3N3aXRjaFwiXG4gICAgICAgICAgXSxcbiAgICAgICAgICBbXG4gICAgICAgICAgICBcInRkXCIsXG4gICAgICAgICAgICBcIkJvb2xlYW5cIlxuICAgICAgICAgIF0sXG4gICAgICAgICAgW1xuICAgICAgICAgICAgXCJ0ZFwiXG4gICAgICAgICAgXVxuICAgICAgICBdLFxuICAgICAgICBbXG4gICAgICAgICAgXCJ0clwiLFxuICAgICAgICAgIFtcbiAgICAgICAgICAgIFwidGRcIixcbiAgICAgICAgICAgIFwiZGlzYWJsZWRcIlxuICAgICAgICAgIF0sXG4gICAgICAgICAgW1xuICAgICAgICAgICAgXCJ0ZFwiLFxuICAgICAgICAgICAgXCLmmK/lkKbnpoHnlKhcIlxuICAgICAgICAgIF0sXG4gICAgICAgICAgW1xuICAgICAgICAgICAgXCJ0ZFwiLFxuICAgICAgICAgICAgXCJCb29sZWFuXCJcbiAgICAgICAgICBdLFxuICAgICAgICAgIFtcbiAgICAgICAgICAgIFwidGRcIlxuICAgICAgICAgIF1cbiAgICAgICAgXSxcbiAgICAgICAgW1xuICAgICAgICAgIFwidHJcIixcbiAgICAgICAgICBbXG4gICAgICAgICAgICBcInRkXCIsXG4gICAgICAgICAgICBcImNvbG9yXCJcbiAgICAgICAgICBdLFxuICAgICAgICAgIFtcbiAgICAgICAgICAgIFwidGRcIixcbiAgICAgICAgICAgIFwi6YCJ5Lit5pe255qE6IOM5pmv6ImyXCJcbiAgICAgICAgICBdLFxuICAgICAgICAgIFtcbiAgICAgICAgICAgIFwidGRcIixcbiAgICAgICAgICAgIFwiU3RyaW5nXCJcbiAgICAgICAgICBdLFxuICAgICAgICAgIFtcbiAgICAgICAgICAgIFwidGRcIlxuICAgICAgICAgIF1cbiAgICAgICAgXVxuICAgICAgXVxuICAgIF1cbiAgXVxufTtcblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9jb21wb25lbnRzL1N3aXRjaC9pbmRleC5tZFxuICoqLyJdLCJzb3VyY2VSb290IjoiIn0=