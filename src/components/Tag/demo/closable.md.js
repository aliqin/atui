webpackJsonp([27,161],{455:function(n,a){"use strict";n.exports={content:{"zh-CN":[["p","closable\u5c5e\u6027\u4f1a\u6dfb\u52a0\u4e00\u4e2a\u5173\u95ed\u6309\u94ae\uff0c\u70b9\u51fb\u5173\u95ed\u53ef\u89e6\u53d1\u4e00\u4e2aclose\u4e8b\u4ef6"]],"en-US":[]},meta:{order:0,title:{"zh-CN":"\u53ef\u5173\u95ed\u7684","en-US":"Type"},filename:"src/components/Tag/demo/closable.md",id:"src-components-Tag-demo-closable"},toc:["ul",["li",["a",{href:"#zh-CN"},"zh-CN"]],["li",["a",{href:"#en-US"},"en-US"]]],highlightedCode:["pre",{lang:"jsx",highlighted:'<span class="token operator" >&lt;</span>v<span class="token operator" >-</span>tag closable @close<span class="token operator" >=</span><span class="token string" >"closeTag"</span><span class="token operator" >></span>\u6807\u7b7e\uff08\u56de\u8c03\uff09<span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;/</span>v-tag</span><span class="token punctuation" >></span></span>'}],preview:'<v-tag closable @close="closeTag">\u6807\u7b7e\uff08\u56de\u8c03\uff09</v-tag>',vueScript:"new Vue({\n  el: 'body',\n  components: {\n    vTag: atui.Tag\n  },\n  methods: {\n    closeTag () {\n      alert('\u6211\u8981\u5173\u95ed\u4e86')\n    }\n  }\n})"}}});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL2NvbXBvbmVudHMvVGFnL2RlbW8vY2xvc2FibGUubWQuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvVGFnL2RlbW8vY2xvc2FibGUubWQiXSwibmFtZXMiOlsid2VicGFja0pzb25wIiwiNDU1IiwibW9kdWxlIiwiZXhwb3J0cyIsImNvbnRlbnQiLCJ6aC1DTiIsImVuLVVTIiwibWV0YSIsIm9yZGVyIiwidGl0bGUiLCJmaWxlbmFtZSIsImlkIiwidG9jIiwiaHJlZiIsImhpZ2hsaWdodGVkQ29kZSIsImxhbmciLCJoaWdobGlnaHRlZCIsInByZXZpZXciLCJ2dWVTY3JpcHQiXSwibWFwcGluZ3MiOiJBQUFBQSxjQUFjLEdBQUcsTUFFWEMsSUFDQSxTQUFTQyxFQUFRQyxHQUV0QixZQ0xERCxHQUFPQyxTQUNMQyxTQUNFQyxVQUVJLElBQ0EsNEpBR0pDLFlBRUZDLE1BQ0VDLE1BQVMsRUFDVEMsT0FDRUosUUFBUywyQkFDVEMsUUFBUyxRQUVYSSxTQUFZLHNDQUNaQyxHQUFNLG9DQUVSQyxLQUNFLE1BRUUsTUFFRSxLQUVFQyxLQUFRLFVBRVYsV0FJRixNQUVFLEtBRUVBLEtBQVEsVUFFVixXQUlOQyxpQkFDRSxPQUVFQyxLQUFRLE1BQ1JDLFlBQWUsZ2FBR25CQyxRQUFXLGlGQUNYQyxVQUFhIiwiZmlsZSI6InNyYy9jb21wb25lbnRzL1RhZy9kZW1vL2Nsb3NhYmxlLm1kLmpzIiwic291cmNlc0NvbnRlbnQiOlsid2VicGFja0pzb25wKFsyNywxNjFdLHtcblxuLyoqKi8gNDU1OlxuLyoqKi8gZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzKSB7XG5cblx0XCJ1c2Ugc3RyaWN0XCI7XG5cdFxuXHRtb2R1bGUuZXhwb3J0cyA9IHtcblx0ICBcImNvbnRlbnRcIjoge1xuXHQgICAgXCJ6aC1DTlwiOiBbW1wicFwiLCBcImNsb3NhYmxl5bGe5oCn5Lya5re75Yqg5LiA5Liq5YWz6Zet5oyJ6ZKu77yM54K55Ye75YWz6Zet5Y+v6Kem5Y+R5LiA5LiqY2xvc2Xkuovku7ZcIl1dLFxuXHQgICAgXCJlbi1VU1wiOiBbXVxuXHQgIH0sXG5cdCAgXCJtZXRhXCI6IHtcblx0ICAgIFwib3JkZXJcIjogMCxcblx0ICAgIFwidGl0bGVcIjoge1xuXHQgICAgICBcInpoLUNOXCI6IFwi5Y+v5YWz6Zet55qEXCIsXG5cdCAgICAgIFwiZW4tVVNcIjogXCJUeXBlXCJcblx0ICAgIH0sXG5cdCAgICBcImZpbGVuYW1lXCI6IFwic3JjL2NvbXBvbmVudHMvVGFnL2RlbW8vY2xvc2FibGUubWRcIixcblx0ICAgIFwiaWRcIjogXCJzcmMtY29tcG9uZW50cy1UYWctZGVtby1jbG9zYWJsZVwiXG5cdCAgfSxcblx0ICBcInRvY1wiOiBbXCJ1bFwiLCBbXCJsaVwiLCBbXCJhXCIsIHtcblx0ICAgIFwiaHJlZlwiOiBcIiN6aC1DTlwiXG5cdCAgfSwgXCJ6aC1DTlwiXV0sIFtcImxpXCIsIFtcImFcIiwge1xuXHQgICAgXCJocmVmXCI6IFwiI2VuLVVTXCJcblx0ICB9LCBcImVuLVVTXCJdXV0sXG5cdCAgXCJoaWdobGlnaHRlZENvZGVcIjogW1wicHJlXCIsIHtcblx0ICAgIFwibGFuZ1wiOiBcImpzeFwiLFxuXHQgICAgXCJoaWdobGlnaHRlZFwiOiBcIjxzcGFuIGNsYXNzPVxcXCJ0b2tlbiBvcGVyYXRvclxcXCIgPiZsdDs8L3NwYW4+djxzcGFuIGNsYXNzPVxcXCJ0b2tlbiBvcGVyYXRvclxcXCIgPi08L3NwYW4+dGFnIGNsb3NhYmxlIEBjbG9zZTxzcGFuIGNsYXNzPVxcXCJ0b2tlbiBvcGVyYXRvclxcXCIgPj08L3NwYW4+PHNwYW4gY2xhc3M9XFxcInRva2VuIHN0cmluZ1xcXCIgPlxcXCJjbG9zZVRhZ1xcXCI8L3NwYW4+PHNwYW4gY2xhc3M9XFxcInRva2VuIG9wZXJhdG9yXFxcIiA+Pjwvc3Bhbj7moIfnrb7vvIjlm57osIPvvIk8c3BhbiBjbGFzcz1cXFwidG9rZW4gdGFnXFxcIiA+PHNwYW4gY2xhc3M9XFxcInRva2VuIHRhZ1xcXCIgPjxzcGFuIGNsYXNzPVxcXCJ0b2tlbiBwdW5jdHVhdGlvblxcXCIgPiZsdDsvPC9zcGFuPnYtdGFnPC9zcGFuPjxzcGFuIGNsYXNzPVxcXCJ0b2tlbiBwdW5jdHVhdGlvblxcXCIgPj48L3NwYW4+PC9zcGFuPlwiXG5cdCAgfV0sXG5cdCAgXCJwcmV2aWV3XCI6IFwiPHYtdGFnIGNsb3NhYmxlIEBjbG9zZT1cXFwiY2xvc2VUYWdcXFwiPuagh+etvu+8iOWbnuiwg++8iTwvdi10YWc+XCIsXG5cdCAgXCJ2dWVTY3JpcHRcIjogXCJuZXcgVnVlKHtcXG4gIGVsOiAnYm9keScsXFxuICBjb21wb25lbnRzOiB7XFxuICAgIHZUYWc6IGF0dWkuVGFnXFxuICB9LFxcbiAgbWV0aG9kczoge1xcbiAgICBjbG9zZVRhZyAoKSB7XFxuICAgICAgYWxlcnQoJ+aIkeimgeWFs+mXreS6hicpXFxuICAgIH1cXG4gIH1cXG59KVwiXG5cdH07XG5cbi8qKiovIH1cblxufSk7XG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogc3JjL2NvbXBvbmVudHMvVGFnL2RlbW8vY2xvc2FibGUubWQuanNcbiAqKi8iLCJtb2R1bGUuZXhwb3J0cyA9IHtcbiAgXCJjb250ZW50XCI6IHtcbiAgICBcInpoLUNOXCI6IFtcbiAgICAgIFtcbiAgICAgICAgXCJwXCIsXG4gICAgICAgIFwiY2xvc2FibGXlsZ7mgKfkvJrmt7vliqDkuIDkuKrlhbPpl63mjInpkq7vvIzngrnlh7vlhbPpl63lj6/op6blj5HkuIDkuKpjbG9zZeS6i+S7tlwiXG4gICAgICBdXG4gICAgXSxcbiAgICBcImVuLVVTXCI6IFtdXG4gIH0sXG4gIFwibWV0YVwiOiB7XG4gICAgXCJvcmRlclwiOiAwLFxuICAgIFwidGl0bGVcIjoge1xuICAgICAgXCJ6aC1DTlwiOiBcIuWPr+WFs+mXreeahFwiLFxuICAgICAgXCJlbi1VU1wiOiBcIlR5cGVcIlxuICAgIH0sXG4gICAgXCJmaWxlbmFtZVwiOiBcInNyYy9jb21wb25lbnRzL1RhZy9kZW1vL2Nsb3NhYmxlLm1kXCIsXG4gICAgXCJpZFwiOiBcInNyYy1jb21wb25lbnRzLVRhZy1kZW1vLWNsb3NhYmxlXCJcbiAgfSxcbiAgXCJ0b2NcIjogW1xuICAgIFwidWxcIixcbiAgICBbXG4gICAgICBcImxpXCIsXG4gICAgICBbXG4gICAgICAgIFwiYVwiLFxuICAgICAgICB7XG4gICAgICAgICAgXCJocmVmXCI6IFwiI3poLUNOXCJcbiAgICAgICAgfSxcbiAgICAgICAgXCJ6aC1DTlwiXG4gICAgICBdXG4gICAgXSxcbiAgICBbXG4gICAgICBcImxpXCIsXG4gICAgICBbXG4gICAgICAgIFwiYVwiLFxuICAgICAgICB7XG4gICAgICAgICAgXCJocmVmXCI6IFwiI2VuLVVTXCJcbiAgICAgICAgfSxcbiAgICAgICAgXCJlbi1VU1wiXG4gICAgICBdXG4gICAgXVxuICBdLFxuICBcImhpZ2hsaWdodGVkQ29kZVwiOiBbXG4gICAgXCJwcmVcIixcbiAgICB7XG4gICAgICBcImxhbmdcIjogXCJqc3hcIixcbiAgICAgIFwiaGlnaGxpZ2h0ZWRcIjogXCI8c3BhbiBjbGFzcz1cXFwidG9rZW4gb3BlcmF0b3JcXFwiID4mbHQ7PC9zcGFuPnY8c3BhbiBjbGFzcz1cXFwidG9rZW4gb3BlcmF0b3JcXFwiID4tPC9zcGFuPnRhZyBjbG9zYWJsZSBAY2xvc2U8c3BhbiBjbGFzcz1cXFwidG9rZW4gb3BlcmF0b3JcXFwiID49PC9zcGFuPjxzcGFuIGNsYXNzPVxcXCJ0b2tlbiBzdHJpbmdcXFwiID5cXFwiY2xvc2VUYWdcXFwiPC9zcGFuPjxzcGFuIGNsYXNzPVxcXCJ0b2tlbiBvcGVyYXRvclxcXCIgPj48L3NwYW4+5qCH562+77yI5Zue6LCD77yJPHNwYW4gY2xhc3M9XFxcInRva2VuIHRhZ1xcXCIgPjxzcGFuIGNsYXNzPVxcXCJ0b2tlbiB0YWdcXFwiID48c3BhbiBjbGFzcz1cXFwidG9rZW4gcHVuY3R1YXRpb25cXFwiID4mbHQ7Lzwvc3Bhbj52LXRhZzwvc3Bhbj48c3BhbiBjbGFzcz1cXFwidG9rZW4gcHVuY3R1YXRpb25cXFwiID4+PC9zcGFuPjwvc3Bhbj5cIlxuICAgIH1cbiAgXSxcbiAgXCJwcmV2aWV3XCI6IFwiPHYtdGFnIGNsb3NhYmxlIEBjbG9zZT1cXFwiY2xvc2VUYWdcXFwiPuagh+etvu+8iOWbnuiwg++8iTwvdi10YWc+XCIsXG4gIFwidnVlU2NyaXB0XCI6IFwibmV3IFZ1ZSh7XFxuICBlbDogJ2JvZHknLFxcbiAgY29tcG9uZW50czoge1xcbiAgICB2VGFnOiBhdHVpLlRhZ1xcbiAgfSxcXG4gIG1ldGhvZHM6IHtcXG4gICAgY2xvc2VUYWcgKCkge1xcbiAgICAgIGFsZXJ0KCfmiJHopoHlhbPpl63kuoYnKVxcbiAgICB9XFxuICB9XFxufSlcIlxufTtcblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9jb21wb25lbnRzL1RhZy9kZW1vL2Nsb3NhYmxlLm1kXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==