webpackJsonp([21,161],{461:function(n,a){"use strict";n.exports={content:{"zh-CN":[["p","\u589e\u52a0\u7edf\u8ba1\u5b57\u6570\u7684\u529f\u80fd"]],"en-US":[]},meta:{order:2,title:{"zh-CN":"\u5b57\u6570\u7edf\u8ba1","en-US":"Type"},filename:"src/components/Textarea/demo/words-count.md",id:"src-components-Textarea-demo-words-count"},toc:["ul",["li",["a",{href:"#zh-CN"},"zh-CN"]],["li",["a",{href:"#en-US"},"en-US"]]],highlightedCode:["pre",{lang:"jsx",highlighted:'<span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;</span>v-textarea</span> <span class="token attr-name" >placeholder</span><span class="token attr-value" ><span class="token punctuation" >=</span><span class="token punctuation" >"</span>\u8bf7\u8f93\u5165\u63cf\u8ff0\u4fe1\u606f<span class="token punctuation" >"</span></span> <span class="token attr-name" >:words-count</span><span class="token attr-value" ><span class="token punctuation" >=</span><span class="token punctuation" >"</span>true<span class="token punctuation" >"</span></span> <span class="token attr-name" >count-tips</span><span class="token attr-value" ><span class="token punctuation" >=</span><span class="token punctuation" >"</span>\u60a8\u8f93\u5165\u7684\u5b57\u6570\u662f\uff1a<span class="token punctuation" >"</span></span><span class="token punctuation" >></span></span><span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;/</span>v-textarea</span><span class="token punctuation" >></span></span>'}],preview:'<v-textarea placeholder="\u8bf7\u8f93\u5165\u63cf\u8ff0\u4fe1\u606f" :words-count="true" count-tips="\u60a8\u8f93\u5165\u7684\u5b57\u6570\u662f\uff1a"></v-textarea>',vueScript:"new Vue({\n  el: 'body',\n  components: {\n    vTextarea: atui.Textarea\n  }\n})"}}});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL2NvbXBvbmVudHMvVGV4dGFyZWEvZGVtby93b3Jkcy1jb3VudC5tZC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9UZXh0YXJlYS9kZW1vL3dvcmRzLWNvdW50Lm1kIl0sIm5hbWVzIjpbIndlYnBhY2tKc29ucCIsIjQ2MSIsIm1vZHVsZSIsImV4cG9ydHMiLCJjb250ZW50IiwiemgtQ04iLCJlbi1VUyIsIm1ldGEiLCJvcmRlciIsInRpdGxlIiwiZmlsZW5hbWUiLCJpZCIsInRvYyIsImhyZWYiLCJoaWdobGlnaHRlZENvZGUiLCJsYW5nIiwiaGlnaGxpZ2h0ZWQiLCJwcmV2aWV3IiwidnVlU2NyaXB0Il0sIm1hcHBpbmdzIjoiQUFBQUEsY0FBYyxHQUFHLE1BRVhDLElBQ0EsU0FBU0MsRUFBUUMsR0FFdEIsWUNMREQsR0FBT0MsU0FDTEMsU0FDRUMsVUFFSSxJQUNBLDJEQUdKQyxZQUVGQyxNQUNFQyxNQUFTLEVBQ1RDLE9BQ0VKLFFBQVMsMkJBQ1RDLFFBQVMsUUFFWEksU0FBWSw4Q0FDWkMsR0FBTSw0Q0FFUkMsS0FDRSxNQUVFLE1BRUUsS0FFRUMsS0FBUSxVQUVWLFdBSUYsTUFFRSxLQUVFQSxLQUFRLFVBRVYsV0FJTkMsaUJBQ0UsT0FFRUMsS0FBUSxNQUNSQyxZQUFlLDhoQ0FHbkJDLFFBQVcsdUtBQ1hDLFVBQWEiLCJmaWxlIjoic3JjL2NvbXBvbmVudHMvVGV4dGFyZWEvZGVtby93b3Jkcy1jb3VudC5tZC5qcyIsInNvdXJjZXNDb250ZW50IjpbIndlYnBhY2tKc29ucChbMjEsMTYxXSx7XG5cbi8qKiovIDQ2MTpcbi8qKiovIGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cykge1xuXG5cdFwidXNlIHN0cmljdFwiO1xuXHRcblx0bW9kdWxlLmV4cG9ydHMgPSB7XG5cdCAgXCJjb250ZW50XCI6IHtcblx0ICAgIFwiemgtQ05cIjogW1tcInBcIiwgXCLlop7liqDnu5/orqHlrZfmlbDnmoTlip/og71cIl1dLFxuXHQgICAgXCJlbi1VU1wiOiBbXVxuXHQgIH0sXG5cdCAgXCJtZXRhXCI6IHtcblx0ICAgIFwib3JkZXJcIjogMixcblx0ICAgIFwidGl0bGVcIjoge1xuXHQgICAgICBcInpoLUNOXCI6IFwi5a2X5pWw57uf6K6hXCIsXG5cdCAgICAgIFwiZW4tVVNcIjogXCJUeXBlXCJcblx0ICAgIH0sXG5cdCAgICBcImZpbGVuYW1lXCI6IFwic3JjL2NvbXBvbmVudHMvVGV4dGFyZWEvZGVtby93b3Jkcy1jb3VudC5tZFwiLFxuXHQgICAgXCJpZFwiOiBcInNyYy1jb21wb25lbnRzLVRleHRhcmVhLWRlbW8td29yZHMtY291bnRcIlxuXHQgIH0sXG5cdCAgXCJ0b2NcIjogW1widWxcIiwgW1wibGlcIiwgW1wiYVwiLCB7XG5cdCAgICBcImhyZWZcIjogXCIjemgtQ05cIlxuXHQgIH0sIFwiemgtQ05cIl1dLCBbXCJsaVwiLCBbXCJhXCIsIHtcblx0ICAgIFwiaHJlZlwiOiBcIiNlbi1VU1wiXG5cdCAgfSwgXCJlbi1VU1wiXV1dLFxuXHQgIFwiaGlnaGxpZ2h0ZWRDb2RlXCI6IFtcInByZVwiLCB7XG5cdCAgICBcImxhbmdcIjogXCJqc3hcIixcblx0ICAgIFwiaGlnaGxpZ2h0ZWRcIjogXCI8c3BhbiBjbGFzcz1cXFwidG9rZW4gdGFnXFxcIiA+PHNwYW4gY2xhc3M9XFxcInRva2VuIHRhZ1xcXCIgPjxzcGFuIGNsYXNzPVxcXCJ0b2tlbiBwdW5jdHVhdGlvblxcXCIgPiZsdDs8L3NwYW4+di10ZXh0YXJlYTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcInRva2VuIGF0dHItbmFtZVxcXCIgPnBsYWNlaG9sZGVyPC9zcGFuPjxzcGFuIGNsYXNzPVxcXCJ0b2tlbiBhdHRyLXZhbHVlXFxcIiA+PHNwYW4gY2xhc3M9XFxcInRva2VuIHB1bmN0dWF0aW9uXFxcIiA+PTwvc3Bhbj48c3BhbiBjbGFzcz1cXFwidG9rZW4gcHVuY3R1YXRpb25cXFwiID5cXFwiPC9zcGFuPuivt+i+k+WFpeaPj+i/sOS/oeaBrzxzcGFuIGNsYXNzPVxcXCJ0b2tlbiBwdW5jdHVhdGlvblxcXCIgPlxcXCI8L3NwYW4+PC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwidG9rZW4gYXR0ci1uYW1lXFxcIiA+OndvcmRzLWNvdW50PC9zcGFuPjxzcGFuIGNsYXNzPVxcXCJ0b2tlbiBhdHRyLXZhbHVlXFxcIiA+PHNwYW4gY2xhc3M9XFxcInRva2VuIHB1bmN0dWF0aW9uXFxcIiA+PTwvc3Bhbj48c3BhbiBjbGFzcz1cXFwidG9rZW4gcHVuY3R1YXRpb25cXFwiID5cXFwiPC9zcGFuPnRydWU8c3BhbiBjbGFzcz1cXFwidG9rZW4gcHVuY3R1YXRpb25cXFwiID5cXFwiPC9zcGFuPjwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcInRva2VuIGF0dHItbmFtZVxcXCIgPmNvdW50LXRpcHM8L3NwYW4+PHNwYW4gY2xhc3M9XFxcInRva2VuIGF0dHItdmFsdWVcXFwiID48c3BhbiBjbGFzcz1cXFwidG9rZW4gcHVuY3R1YXRpb25cXFwiID49PC9zcGFuPjxzcGFuIGNsYXNzPVxcXCJ0b2tlbiBwdW5jdHVhdGlvblxcXCIgPlxcXCI8L3NwYW4+5oKo6L6T5YWl55qE5a2X5pWw5piv77yaPHNwYW4gY2xhc3M9XFxcInRva2VuIHB1bmN0dWF0aW9uXFxcIiA+XFxcIjwvc3Bhbj48L3NwYW4+PHNwYW4gY2xhc3M9XFxcInRva2VuIHB1bmN0dWF0aW9uXFxcIiA+Pjwvc3Bhbj48L3NwYW4+PHNwYW4gY2xhc3M9XFxcInRva2VuIHRhZ1xcXCIgPjxzcGFuIGNsYXNzPVxcXCJ0b2tlbiB0YWdcXFwiID48c3BhbiBjbGFzcz1cXFwidG9rZW4gcHVuY3R1YXRpb25cXFwiID4mbHQ7Lzwvc3Bhbj52LXRleHRhcmVhPC9zcGFuPjxzcGFuIGNsYXNzPVxcXCJ0b2tlbiBwdW5jdHVhdGlvblxcXCIgPj48L3NwYW4+PC9zcGFuPlwiXG5cdCAgfV0sXG5cdCAgXCJwcmV2aWV3XCI6IFwiPHYtdGV4dGFyZWEgcGxhY2Vob2xkZXI9XFxcIuivt+i+k+WFpeaPj+i/sOS/oeaBr1xcXCIgOndvcmRzLWNvdW50PVxcXCJ0cnVlXFxcIiBjb3VudC10aXBzPVxcXCLmgqjovpPlhaXnmoTlrZfmlbDmmK/vvJpcXFwiPjwvdi10ZXh0YXJlYT5cIixcblx0ICBcInZ1ZVNjcmlwdFwiOiBcIm5ldyBWdWUoe1xcbiAgZWw6ICdib2R5JyxcXG4gIGNvbXBvbmVudHM6IHtcXG4gICAgdlRleHRhcmVhOiBhdHVpLlRleHRhcmVhXFxuICB9XFxufSlcIlxuXHR9O1xuXG4vKioqLyB9XG5cbn0pO1xuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIHNyYy9jb21wb25lbnRzL1RleHRhcmVhL2RlbW8vd29yZHMtY291bnQubWQuanNcbiAqKi8iLCJtb2R1bGUuZXhwb3J0cyA9IHtcbiAgXCJjb250ZW50XCI6IHtcbiAgICBcInpoLUNOXCI6IFtcbiAgICAgIFtcbiAgICAgICAgXCJwXCIsXG4gICAgICAgIFwi5aKe5Yqg57uf6K6h5a2X5pWw55qE5Yqf6IO9XCJcbiAgICAgIF1cbiAgICBdLFxuICAgIFwiZW4tVVNcIjogW11cbiAgfSxcbiAgXCJtZXRhXCI6IHtcbiAgICBcIm9yZGVyXCI6IDIsXG4gICAgXCJ0aXRsZVwiOiB7XG4gICAgICBcInpoLUNOXCI6IFwi5a2X5pWw57uf6K6hXCIsXG4gICAgICBcImVuLVVTXCI6IFwiVHlwZVwiXG4gICAgfSxcbiAgICBcImZpbGVuYW1lXCI6IFwic3JjL2NvbXBvbmVudHMvVGV4dGFyZWEvZGVtby93b3Jkcy1jb3VudC5tZFwiLFxuICAgIFwiaWRcIjogXCJzcmMtY29tcG9uZW50cy1UZXh0YXJlYS1kZW1vLXdvcmRzLWNvdW50XCJcbiAgfSxcbiAgXCJ0b2NcIjogW1xuICAgIFwidWxcIixcbiAgICBbXG4gICAgICBcImxpXCIsXG4gICAgICBbXG4gICAgICAgIFwiYVwiLFxuICAgICAgICB7XG4gICAgICAgICAgXCJocmVmXCI6IFwiI3poLUNOXCJcbiAgICAgICAgfSxcbiAgICAgICAgXCJ6aC1DTlwiXG4gICAgICBdXG4gICAgXSxcbiAgICBbXG4gICAgICBcImxpXCIsXG4gICAgICBbXG4gICAgICAgIFwiYVwiLFxuICAgICAgICB7XG4gICAgICAgICAgXCJocmVmXCI6IFwiI2VuLVVTXCJcbiAgICAgICAgfSxcbiAgICAgICAgXCJlbi1VU1wiXG4gICAgICBdXG4gICAgXVxuICBdLFxuICBcImhpZ2hsaWdodGVkQ29kZVwiOiBbXG4gICAgXCJwcmVcIixcbiAgICB7XG4gICAgICBcImxhbmdcIjogXCJqc3hcIixcbiAgICAgIFwiaGlnaGxpZ2h0ZWRcIjogXCI8c3BhbiBjbGFzcz1cXFwidG9rZW4gdGFnXFxcIiA+PHNwYW4gY2xhc3M9XFxcInRva2VuIHRhZ1xcXCIgPjxzcGFuIGNsYXNzPVxcXCJ0b2tlbiBwdW5jdHVhdGlvblxcXCIgPiZsdDs8L3NwYW4+di10ZXh0YXJlYTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcInRva2VuIGF0dHItbmFtZVxcXCIgPnBsYWNlaG9sZGVyPC9zcGFuPjxzcGFuIGNsYXNzPVxcXCJ0b2tlbiBhdHRyLXZhbHVlXFxcIiA+PHNwYW4gY2xhc3M9XFxcInRva2VuIHB1bmN0dWF0aW9uXFxcIiA+PTwvc3Bhbj48c3BhbiBjbGFzcz1cXFwidG9rZW4gcHVuY3R1YXRpb25cXFwiID5cXFwiPC9zcGFuPuivt+i+k+WFpeaPj+i/sOS/oeaBrzxzcGFuIGNsYXNzPVxcXCJ0b2tlbiBwdW5jdHVhdGlvblxcXCIgPlxcXCI8L3NwYW4+PC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwidG9rZW4gYXR0ci1uYW1lXFxcIiA+OndvcmRzLWNvdW50PC9zcGFuPjxzcGFuIGNsYXNzPVxcXCJ0b2tlbiBhdHRyLXZhbHVlXFxcIiA+PHNwYW4gY2xhc3M9XFxcInRva2VuIHB1bmN0dWF0aW9uXFxcIiA+PTwvc3Bhbj48c3BhbiBjbGFzcz1cXFwidG9rZW4gcHVuY3R1YXRpb25cXFwiID5cXFwiPC9zcGFuPnRydWU8c3BhbiBjbGFzcz1cXFwidG9rZW4gcHVuY3R1YXRpb25cXFwiID5cXFwiPC9zcGFuPjwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcInRva2VuIGF0dHItbmFtZVxcXCIgPmNvdW50LXRpcHM8L3NwYW4+PHNwYW4gY2xhc3M9XFxcInRva2VuIGF0dHItdmFsdWVcXFwiID48c3BhbiBjbGFzcz1cXFwidG9rZW4gcHVuY3R1YXRpb25cXFwiID49PC9zcGFuPjxzcGFuIGNsYXNzPVxcXCJ0b2tlbiBwdW5jdHVhdGlvblxcXCIgPlxcXCI8L3NwYW4+5oKo6L6T5YWl55qE5a2X5pWw5piv77yaPHNwYW4gY2xhc3M9XFxcInRva2VuIHB1bmN0dWF0aW9uXFxcIiA+XFxcIjwvc3Bhbj48L3NwYW4+PHNwYW4gY2xhc3M9XFxcInRva2VuIHB1bmN0dWF0aW9uXFxcIiA+Pjwvc3Bhbj48L3NwYW4+PHNwYW4gY2xhc3M9XFxcInRva2VuIHRhZ1xcXCIgPjxzcGFuIGNsYXNzPVxcXCJ0b2tlbiB0YWdcXFwiID48c3BhbiBjbGFzcz1cXFwidG9rZW4gcHVuY3R1YXRpb25cXFwiID4mbHQ7Lzwvc3Bhbj52LXRleHRhcmVhPC9zcGFuPjxzcGFuIGNsYXNzPVxcXCJ0b2tlbiBwdW5jdHVhdGlvblxcXCIgPj48L3NwYW4+PC9zcGFuPlwiXG4gICAgfVxuICBdLFxuICBcInByZXZpZXdcIjogXCI8di10ZXh0YXJlYSBwbGFjZWhvbGRlcj1cXFwi6K+36L6T5YWl5o+P6L+w5L+h5oGvXFxcIiA6d29yZHMtY291bnQ9XFxcInRydWVcXFwiIGNvdW50LXRpcHM9XFxcIuaCqOi+k+WFpeeahOWtl+aVsOaYr++8mlxcXCI+PC92LXRleHRhcmVhPlwiLFxuICBcInZ1ZVNjcmlwdFwiOiBcIm5ldyBWdWUoe1xcbiAgZWw6ICdib2R5JyxcXG4gIGNvbXBvbmVudHM6IHtcXG4gICAgdlRleHRhcmVhOiBhdHVpLlRleHRhcmVhXFxuICB9XFxufSlcIlxufTtcblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9jb21wb25lbnRzL1RleHRhcmVhL2RlbW8vd29yZHMtY291bnQubWRcbiAqKi8iXSwic291cmNlUm9vdCI6IiJ9