webpackJsonp([20,163],{464:function(t,d){"use strict";t.exports={content:["section",["h2","\u4f55\u65f6\u4f7f\u7528"]],meta:{category:"Components",type:"Form Controls",title:"Textarea",subtitle:"\u591a\u884c\u6587\u672c\u6846",filename:"src/components/Textarea/index.md"},toc:["ul",["li",["a",{href:"#\u4f55\u65f6\u4f7f\u7528"},"\u4f55\u65f6\u4f7f\u7528"]],["li",["a",{href:"#API"},"API"]]],api:["section",["h2","API"],["table",["thead",["tr",["th","\u5c5e\u6027"],["th","\u8bf4\u660e"],["th","\u7c7b\u578b"],["th","\u9ed8\u8ba4\u503c"]]],["tbody",["tr",["td","placeholder"],["td","\u5360\u4f4d\u63d0\u793a\u6587\u5b57"],["td","String"],["td"]],["tr",["td","content"],["td","\u5185\u5bb9"],["td","String"],["td"]],["tr",["td","disabled"],["td","\u662f\u5426\u7981\u7528"],["td","Boolean"],["td","false"]],["tr",["td","autosize"],["td","\u662f\u5426\u81ea\u52a8\u9ad8"],["td","Boolean"],["td","false"]],["tr",["td","countTips"],["td","\u7edf\u8ba1\u5b57\u6570\u7684\u63d0\u793a\u6587\u5b57"],["td","String"],["td"]],["tr",["td","wordsCount"],["td","\u662f\u5426\u663e\u793a\u5b57\u6570\u7edf\u8ba1"],["td","Boolean"],["td","false"]],["tr",["td","maxRows"],["td","\u6700\u5927\u884c\u6570"],["td","Number"],["td"]],["tr",["td","minRows"],["td","\u6700\u5c0f\u884c\u6570"],["td","Number"],["td"]]]]]}}});
//# sourceMappingURL=data:application/json;base64,