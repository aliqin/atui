webpackJsonp([115,163],{369:function(t,e){"use strict";t.exports={content:["section",["p","\u6309\u94ae\u7528\u4e8e\u5f00\u59cb\u4e00\u4e2a\u5373\u65f6\u64cd\u4f5c\u3002"],["h2","\u4f55\u65f6\u4f7f\u7528"]],meta:{category:"Components",type:"Views",title:"Badge",subtitle:"\u5fbd\u6807\u6570",filename:"src/components/Badge/index.md"},toc:["ul",["li",["a",{href:"#\u4f55\u65f6\u4f7f\u7528"},"\u4f55\u65f6\u4f7f\u7528"]],["li",["a",{href:"#API"},"API"]]],api:["section",["h2","API"],["p","\u6309\u94ae\u7684\u5c5e\u6027\u8bf4\u660e\u5982\u4e0b\uff1a"],["table",["thead",["tr",["th","\u53c2\u6570"],["th","\u8bf4\u660e"],["th","\u7c7b\u578b"],["th","\u53ef\u9009\u503c"],["th","\u9ed8\u8ba4\u503c"]]],["tbody",["tr",["td","count"],["td","\u5c55\u793a\u7684\u6570\u5b57\uff0c\u5927\u4e8e overflowCount \u65f6\u663e\u793a\u4e3a ",["code","${overflowCount}+"],"\uff0c\u4e3a 0 \u65f6\u9690\u85cf"],["td","Number"],["td"],["td"]],["tr",["td","overflowCount"],["td","\u5c55\u793a\u5c01\u9876\u7684\u6570\u5b57\u503c"],["td","Number"],["td"],["td","99"]],["tr",["td","dot"],["td","\u4e0d\u5c55\u793a\u6570\u5b57\uff0c\u53ea\u6709\u4e00\u4e2a\u5c0f\u7ea2\u70b9"],["td","boolean"],["td"],["td","false"]]]],["style","\n  .badge-count-example, .badge-dot-example {\n    width: 42px;\n    height: 42px;\n    background-color: #eee;\n    display: inline-block;\n    border-radius: 6px;\n  }\n  .example-title {\n    margin: 20px 0;\n  }\n"]]}}});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL2NvbXBvbmVudHMvQmFkZ2UvaW5kZXgubWQuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvQmFkZ2UvaW5kZXgubWQiXSwibmFtZXMiOlsid2VicGFja0pzb25wIiwiMzY5IiwibW9kdWxlIiwiZXhwb3J0cyIsImNvbnRlbnQiLCJtZXRhIiwiY2F0ZWdvcnkiLCJ0eXBlIiwidGl0bGUiLCJzdWJ0aXRsZSIsImZpbGVuYW1lIiwidG9jIiwiaHJlZiIsImFwaSJdLCJtYXBwaW5ncyI6IkFBQUFBLGNBQWMsSUFBSSxNQUVaQyxJQUNBLFNBQVNDLEVBQVFDLEdBRXRCLFlDTERELEdBQU9DLFNBQ0xDLFNBQ0UsV0FFRSxJQUNBLG1GQUdBLEtBQ0EsNkJBR0pDLE1BQ0VDLFNBQVksYUFDWkMsS0FBUSxRQUNSQyxNQUFTLFFBQ1RDLFNBQVkscUJBQ1pDLFNBQVksaUNBRWRDLEtBQ0UsTUFFRSxNQUVFLEtBRUVDLEtBQVEsNkJBRVYsOEJBSUYsTUFFRSxLQUVFQSxLQUFRLFFBRVYsU0FJTkMsS0FDRSxXQUVFLEtBQ0EsUUFHQSxJQUNBLGlFQUdBLFNBRUUsU0FFRSxNQUVFLEtBQ0EsaUJBR0EsS0FDQSxpQkFHQSxLQUNBLGlCQUdBLEtBQ0EsdUJBR0EsS0FDQSx5QkFLSixTQUVFLE1BRUUsS0FDQSxVQUdBLEtBQ0EsNEZBRUUsT0FDQSxxQkFFRixzQ0FHQSxLQUNBLFdBR0EsT0FHQSxRQUlGLE1BRUUsS0FDQSxrQkFHQSxLQUNBLHFEQUdBLEtBQ0EsV0FHQSxPQUdBLEtBQ0EsUUFJRixNQUVFLEtBQ0EsUUFHQSxLQUNBLG1GQUdBLEtBQ0EsWUFHQSxPQUdBLEtBQ0EsYUFNTixRQUNBIiwiZmlsZSI6InNyYy9jb21wb25lbnRzL0JhZGdlL2luZGV4Lm1kLmpzIiwic291cmNlc0NvbnRlbnQiOlsid2VicGFja0pzb25wKFsxMTUsMTYzXSx7XG5cbi8qKiovIDM2OTpcbi8qKiovIGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cykge1xuXG5cdFwidXNlIHN0cmljdFwiO1xuXHRcblx0bW9kdWxlLmV4cG9ydHMgPSB7XG5cdCAgXCJjb250ZW50XCI6IFtcInNlY3Rpb25cIiwgW1wicFwiLCBcIuaMiemSrueUqOS6juW8gOWni+S4gOS4quWNs+aXtuaTjeS9nOOAglwiXSwgW1wiaDJcIiwgXCLkvZXml7bkvb/nlKhcIl1dLFxuXHQgIFwibWV0YVwiOiB7XG5cdCAgICBcImNhdGVnb3J5XCI6IFwiQ29tcG9uZW50c1wiLFxuXHQgICAgXCJ0eXBlXCI6IFwiVmlld3NcIixcblx0ICAgIFwidGl0bGVcIjogXCJCYWRnZVwiLFxuXHQgICAgXCJzdWJ0aXRsZVwiOiBcIuW+veagh+aVsFwiLFxuXHQgICAgXCJmaWxlbmFtZVwiOiBcInNyYy9jb21wb25lbnRzL0JhZGdlL2luZGV4Lm1kXCJcblx0ICB9LFxuXHQgIFwidG9jXCI6IFtcInVsXCIsIFtcImxpXCIsIFtcImFcIiwge1xuXHQgICAgXCJocmVmXCI6IFwiI+S9leaXtuS9v+eUqFwiXG5cdCAgfSwgXCLkvZXml7bkvb/nlKhcIl1dLCBbXCJsaVwiLCBbXCJhXCIsIHtcblx0ICAgIFwiaHJlZlwiOiBcIiNBUElcIlxuXHQgIH0sIFwiQVBJXCJdXV0sXG5cdCAgXCJhcGlcIjogW1wic2VjdGlvblwiLCBbXCJoMlwiLCBcIkFQSVwiXSwgW1wicFwiLCBcIuaMiemSrueahOWxnuaAp+ivtOaYjuWmguS4i++8mlwiXSwgW1widGFibGVcIiwgW1widGhlYWRcIiwgW1widHJcIiwgW1widGhcIiwgXCLlj4LmlbBcIl0sIFtcInRoXCIsIFwi6K+05piOXCJdLCBbXCJ0aFwiLCBcIuexu+Wei1wiXSwgW1widGhcIiwgXCLlj6/pgInlgLxcIl0sIFtcInRoXCIsIFwi6buY6K6k5YC8XCJdXV0sIFtcInRib2R5XCIsIFtcInRyXCIsIFtcInRkXCIsIFwiY291bnRcIl0sIFtcInRkXCIsIFwi5bGV56S655qE5pWw5a2X77yM5aSn5LqOIG92ZXJmbG93Q291bnQg5pe25pi+56S65Li6IFwiLCBbXCJjb2RlXCIsIFwiJHtvdmVyZmxvd0NvdW50fStcIl0sIFwi77yM5Li6IDAg5pe26ZqQ6JePXCJdLCBbXCJ0ZFwiLCBcIk51bWJlclwiXSwgW1widGRcIl0sIFtcInRkXCJdXSwgW1widHJcIiwgW1widGRcIiwgXCJvdmVyZmxvd0NvdW50XCJdLCBbXCJ0ZFwiLCBcIuWxleekuuWwgemhtueahOaVsOWtl+WAvFwiXSwgW1widGRcIiwgXCJOdW1iZXJcIl0sIFtcInRkXCJdLCBbXCJ0ZFwiLCBcIjk5XCJdXSwgW1widHJcIiwgW1widGRcIiwgXCJkb3RcIl0sIFtcInRkXCIsIFwi5LiN5bGV56S65pWw5a2X77yM5Y+q5pyJ5LiA5Liq5bCP57qi54K5XCJdLCBbXCJ0ZFwiLCBcImJvb2xlYW5cIl0sIFtcInRkXCJdLCBbXCJ0ZFwiLCBcImZhbHNlXCJdXV1dLCBbXCJzdHlsZVwiLCBcIlxcbiAgLmJhZGdlLWNvdW50LWV4YW1wbGUsIC5iYWRnZS1kb3QtZXhhbXBsZSB7XFxuICAgIHdpZHRoOiA0MnB4O1xcbiAgICBoZWlnaHQ6IDQycHg7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICNlZWU7XFxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcXG4gICAgYm9yZGVyLXJhZGl1czogNnB4O1xcbiAgfVxcbiAgLmV4YW1wbGUtdGl0bGUge1xcbiAgICBtYXJnaW46IDIwcHggMDtcXG4gIH1cXG5cIl1dXG5cdH07XG5cbi8qKiovIH1cblxufSk7XG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogc3JjL2NvbXBvbmVudHMvQmFkZ2UvaW5kZXgubWQuanNcbiAqKi8iLCJtb2R1bGUuZXhwb3J0cyA9IHtcbiAgXCJjb250ZW50XCI6IFtcbiAgICBcInNlY3Rpb25cIixcbiAgICBbXG4gICAgICBcInBcIixcbiAgICAgIFwi5oyJ6ZKu55So5LqO5byA5aeL5LiA5Liq5Y2z5pe25pON5L2c44CCXCJcbiAgICBdLFxuICAgIFtcbiAgICAgIFwiaDJcIixcbiAgICAgIFwi5L2V5pe25L2/55SoXCJcbiAgICBdXG4gIF0sXG4gIFwibWV0YVwiOiB7XG4gICAgXCJjYXRlZ29yeVwiOiBcIkNvbXBvbmVudHNcIixcbiAgICBcInR5cGVcIjogXCJWaWV3c1wiLFxuICAgIFwidGl0bGVcIjogXCJCYWRnZVwiLFxuICAgIFwic3VidGl0bGVcIjogXCLlvr3moIfmlbBcIixcbiAgICBcImZpbGVuYW1lXCI6IFwic3JjL2NvbXBvbmVudHMvQmFkZ2UvaW5kZXgubWRcIlxuICB9LFxuICBcInRvY1wiOiBbXG4gICAgXCJ1bFwiLFxuICAgIFtcbiAgICAgIFwibGlcIixcbiAgICAgIFtcbiAgICAgICAgXCJhXCIsXG4gICAgICAgIHtcbiAgICAgICAgICBcImhyZWZcIjogXCIj5L2V5pe25L2/55SoXCJcbiAgICAgICAgfSxcbiAgICAgICAgXCLkvZXml7bkvb/nlKhcIlxuICAgICAgXVxuICAgIF0sXG4gICAgW1xuICAgICAgXCJsaVwiLFxuICAgICAgW1xuICAgICAgICBcImFcIixcbiAgICAgICAge1xuICAgICAgICAgIFwiaHJlZlwiOiBcIiNBUElcIlxuICAgICAgICB9LFxuICAgICAgICBcIkFQSVwiXG4gICAgICBdXG4gICAgXVxuICBdLFxuICBcImFwaVwiOiBbXG4gICAgXCJzZWN0aW9uXCIsXG4gICAgW1xuICAgICAgXCJoMlwiLFxuICAgICAgXCJBUElcIlxuICAgIF0sXG4gICAgW1xuICAgICAgXCJwXCIsXG4gICAgICBcIuaMiemSrueahOWxnuaAp+ivtOaYjuWmguS4i++8mlwiXG4gICAgXSxcbiAgICBbXG4gICAgICBcInRhYmxlXCIsXG4gICAgICBbXG4gICAgICAgIFwidGhlYWRcIixcbiAgICAgICAgW1xuICAgICAgICAgIFwidHJcIixcbiAgICAgICAgICBbXG4gICAgICAgICAgICBcInRoXCIsXG4gICAgICAgICAgICBcIuWPguaVsFwiXG4gICAgICAgICAgXSxcbiAgICAgICAgICBbXG4gICAgICAgICAgICBcInRoXCIsXG4gICAgICAgICAgICBcIuivtOaYjlwiXG4gICAgICAgICAgXSxcbiAgICAgICAgICBbXG4gICAgICAgICAgICBcInRoXCIsXG4gICAgICAgICAgICBcIuexu+Wei1wiXG4gICAgICAgICAgXSxcbiAgICAgICAgICBbXG4gICAgICAgICAgICBcInRoXCIsXG4gICAgICAgICAgICBcIuWPr+mAieWAvFwiXG4gICAgICAgICAgXSxcbiAgICAgICAgICBbXG4gICAgICAgICAgICBcInRoXCIsXG4gICAgICAgICAgICBcIum7mOiupOWAvFwiXG4gICAgICAgICAgXVxuICAgICAgICBdXG4gICAgICBdLFxuICAgICAgW1xuICAgICAgICBcInRib2R5XCIsXG4gICAgICAgIFtcbiAgICAgICAgICBcInRyXCIsXG4gICAgICAgICAgW1xuICAgICAgICAgICAgXCJ0ZFwiLFxuICAgICAgICAgICAgXCJjb3VudFwiXG4gICAgICAgICAgXSxcbiAgICAgICAgICBbXG4gICAgICAgICAgICBcInRkXCIsXG4gICAgICAgICAgICBcIuWxleekuueahOaVsOWtl++8jOWkp+S6jiBvdmVyZmxvd0NvdW50IOaXtuaYvuekuuS4uiBcIixcbiAgICAgICAgICAgIFtcbiAgICAgICAgICAgICAgXCJjb2RlXCIsXG4gICAgICAgICAgICAgIFwiJHtvdmVyZmxvd0NvdW50fStcIlxuICAgICAgICAgICAgXSxcbiAgICAgICAgICAgIFwi77yM5Li6IDAg5pe26ZqQ6JePXCJcbiAgICAgICAgICBdLFxuICAgICAgICAgIFtcbiAgICAgICAgICAgIFwidGRcIixcbiAgICAgICAgICAgIFwiTnVtYmVyXCJcbiAgICAgICAgICBdLFxuICAgICAgICAgIFtcbiAgICAgICAgICAgIFwidGRcIlxuICAgICAgICAgIF0sXG4gICAgICAgICAgW1xuICAgICAgICAgICAgXCJ0ZFwiXG4gICAgICAgICAgXVxuICAgICAgICBdLFxuICAgICAgICBbXG4gICAgICAgICAgXCJ0clwiLFxuICAgICAgICAgIFtcbiAgICAgICAgICAgIFwidGRcIixcbiAgICAgICAgICAgIFwib3ZlcmZsb3dDb3VudFwiXG4gICAgICAgICAgXSxcbiAgICAgICAgICBbXG4gICAgICAgICAgICBcInRkXCIsXG4gICAgICAgICAgICBcIuWxleekuuWwgemhtueahOaVsOWtl+WAvFwiXG4gICAgICAgICAgXSxcbiAgICAgICAgICBbXG4gICAgICAgICAgICBcInRkXCIsXG4gICAgICAgICAgICBcIk51bWJlclwiXG4gICAgICAgICAgXSxcbiAgICAgICAgICBbXG4gICAgICAgICAgICBcInRkXCJcbiAgICAgICAgICBdLFxuICAgICAgICAgIFtcbiAgICAgICAgICAgIFwidGRcIixcbiAgICAgICAgICAgIFwiOTlcIlxuICAgICAgICAgIF1cbiAgICAgICAgXSxcbiAgICAgICAgW1xuICAgICAgICAgIFwidHJcIixcbiAgICAgICAgICBbXG4gICAgICAgICAgICBcInRkXCIsXG4gICAgICAgICAgICBcImRvdFwiXG4gICAgICAgICAgXSxcbiAgICAgICAgICBbXG4gICAgICAgICAgICBcInRkXCIsXG4gICAgICAgICAgICBcIuS4jeWxleekuuaVsOWtl++8jOWPquacieS4gOS4quWwj+e6oueCuVwiXG4gICAgICAgICAgXSxcbiAgICAgICAgICBbXG4gICAgICAgICAgICBcInRkXCIsXG4gICAgICAgICAgICBcImJvb2xlYW5cIlxuICAgICAgICAgIF0sXG4gICAgICAgICAgW1xuICAgICAgICAgICAgXCJ0ZFwiXG4gICAgICAgICAgXSxcbiAgICAgICAgICBbXG4gICAgICAgICAgICBcInRkXCIsXG4gICAgICAgICAgICBcImZhbHNlXCJcbiAgICAgICAgICBdXG4gICAgICAgIF1cbiAgICAgIF1cbiAgICBdLFxuICAgIFtcbiAgICAgIFwic3R5bGVcIixcbiAgICAgIFwiXFxuICAuYmFkZ2UtY291bnQtZXhhbXBsZSwgLmJhZGdlLWRvdC1leGFtcGxlIHtcXG4gICAgd2lkdGg6IDQycHg7XFxuICAgIGhlaWdodDogNDJweDtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2VlZTtcXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xcbiAgICBib3JkZXItcmFkaXVzOiA2cHg7XFxuICB9XFxuICAuZXhhbXBsZS10aXRsZSB7XFxuICAgIG1hcmdpbjogMjBweCAwO1xcbiAgfVxcblwiXG4gICAgXVxuICBdXG59O1xuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL2NvbXBvbmVudHMvQmFkZ2UvaW5kZXgubWRcbiAqKi8iXSwic291cmNlUm9vdCI6IiJ9