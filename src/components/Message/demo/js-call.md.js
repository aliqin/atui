webpackJsonp([75,163],{409:function(n,s){"use strict";n.exports={content:{"zh-CN":[["p","\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u7ec4\u4ef6\u5b9e\u4f8b\u8c03\u7528\u65b9\u6cd5,\u6bd4\u5982\uff1a"],["ul",["li",["p",["code","message.success(content, duration)"]]],["li",["p",["code","message.error(content, duration)"]]],["li",["p",["code","message.info(content, duration)"]]],["li",["p",["code","message.warning(content, duration)"]]],["li",["p",["code","message.loading(content, duration)"]]]]],"en-US":[]},meta:{order:4,title:{"zh-CN":"\u4f7f\u7528\u811a\u672c\u8c03\u7528","en-US":"Type"},filename:"src/components/Message/demo/js-call.md",id:"src-components-Message-demo-js-call"},toc:["ul",["li",["a",{href:"#zh-CN"},"zh-CN"]],["li",["a",{href:"#en-US"},"en-US"]]],highlightedCode:["pre",{lang:"jsx",highlighted:'<span class="token operator" >&lt;</span>v<span class="token operator" >-</span>button @click<span class="token operator" >=</span><span class="token string" >"showMessage"</span><span class="token operator" >></span>\n  \u70b9\u6211\u4f1a\u5f39\u51fa\u63d0\u793a\n<span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;/</span>v-button</span><span class="token punctuation" >></span></span>'}],preview:'<v-button @click="showMessage">\n  \u70b9\u6211\u4f1a\u5f39\u51fa\u63d0\u793a\n</v-button>',vueScript:"new Vue({\n  el: 'body',\n  components: {\n    vButton: atui.Button\n  },\n  methods: {\n    showMessage () {\n      atui.Message.success('\u6210\u529f\u5566')\n    }\n  }\n\n})"}}});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL2NvbXBvbmVudHMvTWVzc2FnZS9kZW1vL2pzLWNhbGwubWQuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvTWVzc2FnZS9kZW1vL2pzLWNhbGwubWQiXSwibmFtZXMiOlsid2VicGFja0pzb25wIiwiNDA5IiwibW9kdWxlIiwiZXhwb3J0cyIsImNvbnRlbnQiLCJ6aC1DTiIsImVuLVVTIiwibWV0YSIsIm9yZGVyIiwidGl0bGUiLCJmaWxlbmFtZSIsImlkIiwidG9jIiwiaHJlZiIsImhpZ2hsaWdodGVkQ29kZSIsImxhbmciLCJoaWdobGlnaHRlZCIsInByZXZpZXciLCJ2dWVTY3JpcHQiXSwibWFwcGluZ3MiOiJBQUFBQSxjQUFjLEdBQUcsTUFFWEMsSUFDQSxTQUFTQyxFQUFRQyxHQUV0QixZQ0xERCxHQUFPQyxTQUNMQyxTQUNFQyxVQUVJLElBQ0EsNEdBR0EsTUFFRSxNQUVFLEtBRUUsT0FDQSx5Q0FLSixNQUVFLEtBRUUsT0FDQSx1Q0FLSixNQUVFLEtBRUUsT0FDQSxzQ0FLSixNQUVFLEtBRUUsT0FDQSx5Q0FLSixNQUVFLEtBRUUsT0FDQSwwQ0FNVkMsWUFFRkMsTUFDRUMsTUFBUyxFQUNUQyxPQUNFSixRQUFTLHVDQUNUQyxRQUFTLFFBRVhJLFNBQVkseUNBQ1pDLEdBQU0sdUNBRVJDLEtBQ0UsTUFFRSxNQUVFLEtBRUVDLEtBQVEsVUFFVixXQUlGLE1BRUUsS0FFRUEsS0FBUSxVQUVWLFdBSU5DLGlCQUNFLE9BRUVDLEtBQVEsTUFDUkMsWUFBZSw0YUFHbkJDLFFBQVcsNkZBQ1hDLFVBQWEiLCJmaWxlIjoic3JjL2NvbXBvbmVudHMvTWVzc2FnZS9kZW1vL2pzLWNhbGwubWQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ3ZWJwYWNrSnNvbnAoWzc1LDE2M10se1xuXG4vKioqLyA0MDk6XG4vKioqLyBmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMpIHtcblxuXHRcInVzZSBzdHJpY3RcIjtcblx0XG5cdG1vZHVsZS5leHBvcnRzID0ge1xuXHQgIFwiY29udGVudFwiOiB7XG5cdCAgICBcInpoLUNOXCI6IFtbXCJwXCIsIFwi5Y+v5Lul55u05o6l5L2/55So57uE5Lu25a6e5L6L6LCD55So5pa55rOVLOavlOWmgu+8mlwiXSwgW1widWxcIiwgW1wibGlcIiwgW1wicFwiLCBbXCJjb2RlXCIsIFwibWVzc2FnZS5zdWNjZXNzKGNvbnRlbnQsIGR1cmF0aW9uKVwiXV1dLCBbXCJsaVwiLCBbXCJwXCIsIFtcImNvZGVcIiwgXCJtZXNzYWdlLmVycm9yKGNvbnRlbnQsIGR1cmF0aW9uKVwiXV1dLCBbXCJsaVwiLCBbXCJwXCIsIFtcImNvZGVcIiwgXCJtZXNzYWdlLmluZm8oY29udGVudCwgZHVyYXRpb24pXCJdXV0sIFtcImxpXCIsIFtcInBcIiwgW1wiY29kZVwiLCBcIm1lc3NhZ2Uud2FybmluZyhjb250ZW50LCBkdXJhdGlvbilcIl1dXSwgW1wibGlcIiwgW1wicFwiLCBbXCJjb2RlXCIsIFwibWVzc2FnZS5sb2FkaW5nKGNvbnRlbnQsIGR1cmF0aW9uKVwiXV1dXV0sXG5cdCAgICBcImVuLVVTXCI6IFtdXG5cdCAgfSxcblx0ICBcIm1ldGFcIjoge1xuXHQgICAgXCJvcmRlclwiOiA0LFxuXHQgICAgXCJ0aXRsZVwiOiB7XG5cdCAgICAgIFwiemgtQ05cIjogXCLkvb/nlKjohJrmnKzosIPnlKhcIixcblx0ICAgICAgXCJlbi1VU1wiOiBcIlR5cGVcIlxuXHQgICAgfSxcblx0ICAgIFwiZmlsZW5hbWVcIjogXCJzcmMvY29tcG9uZW50cy9NZXNzYWdlL2RlbW8vanMtY2FsbC5tZFwiLFxuXHQgICAgXCJpZFwiOiBcInNyYy1jb21wb25lbnRzLU1lc3NhZ2UtZGVtby1qcy1jYWxsXCJcblx0ICB9LFxuXHQgIFwidG9jXCI6IFtcInVsXCIsIFtcImxpXCIsIFtcImFcIiwge1xuXHQgICAgXCJocmVmXCI6IFwiI3poLUNOXCJcblx0ICB9LCBcInpoLUNOXCJdXSwgW1wibGlcIiwgW1wiYVwiLCB7XG5cdCAgICBcImhyZWZcIjogXCIjZW4tVVNcIlxuXHQgIH0sIFwiZW4tVVNcIl1dXSxcblx0ICBcImhpZ2hsaWdodGVkQ29kZVwiOiBbXCJwcmVcIiwge1xuXHQgICAgXCJsYW5nXCI6IFwianN4XCIsXG5cdCAgICBcImhpZ2hsaWdodGVkXCI6IFwiPHNwYW4gY2xhc3M9XFxcInRva2VuIG9wZXJhdG9yXFxcIiA+Jmx0Ozwvc3Bhbj52PHNwYW4gY2xhc3M9XFxcInRva2VuIG9wZXJhdG9yXFxcIiA+LTwvc3Bhbj5idXR0b24gQGNsaWNrPHNwYW4gY2xhc3M9XFxcInRva2VuIG9wZXJhdG9yXFxcIiA+PTwvc3Bhbj48c3BhbiBjbGFzcz1cXFwidG9rZW4gc3RyaW5nXFxcIiA+XFxcInNob3dNZXNzYWdlXFxcIjwvc3Bhbj48c3BhbiBjbGFzcz1cXFwidG9rZW4gb3BlcmF0b3JcXFwiID4+PC9zcGFuPlxcbiAg54K55oiR5Lya5by55Ye65o+Q56S6XFxuPHNwYW4gY2xhc3M9XFxcInRva2VuIHRhZ1xcXCIgPjxzcGFuIGNsYXNzPVxcXCJ0b2tlbiB0YWdcXFwiID48c3BhbiBjbGFzcz1cXFwidG9rZW4gcHVuY3R1YXRpb25cXFwiID4mbHQ7Lzwvc3Bhbj52LWJ1dHRvbjwvc3Bhbj48c3BhbiBjbGFzcz1cXFwidG9rZW4gcHVuY3R1YXRpb25cXFwiID4+PC9zcGFuPjwvc3Bhbj5cIlxuXHQgIH1dLFxuXHQgIFwicHJldmlld1wiOiBcIjx2LWJ1dHRvbiBAY2xpY2s9XFxcInNob3dNZXNzYWdlXFxcIj5cXG4gIOeCueaIkeS8muW8ueWHuuaPkOekulxcbjwvdi1idXR0b24+XCIsXG5cdCAgXCJ2dWVTY3JpcHRcIjogXCJuZXcgVnVlKHtcXG4gIGVsOiAnYm9keScsXFxuICBjb21wb25lbnRzOiB7XFxuICAgIHZCdXR0b246IGF0dWkuQnV0dG9uXFxuICB9LFxcbiAgbWV0aG9kczoge1xcbiAgICBzaG93TWVzc2FnZSAoKSB7XFxuICAgICAgYXR1aS5NZXNzYWdlLnN1Y2Nlc3MoJ+aIkOWKn+WVpicpXFxuICAgIH1cXG4gIH1cXG5cXG59KVwiXG5cdH07XG5cbi8qKiovIH1cblxufSk7XG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogc3JjL2NvbXBvbmVudHMvTWVzc2FnZS9kZW1vL2pzLWNhbGwubWQuanNcbiAqKi8iLCJtb2R1bGUuZXhwb3J0cyA9IHtcbiAgXCJjb250ZW50XCI6IHtcbiAgICBcInpoLUNOXCI6IFtcbiAgICAgIFtcbiAgICAgICAgXCJwXCIsXG4gICAgICAgIFwi5Y+v5Lul55u05o6l5L2/55So57uE5Lu25a6e5L6L6LCD55So5pa55rOVLOavlOWmgu+8mlwiXG4gICAgICBdLFxuICAgICAgW1xuICAgICAgICBcInVsXCIsXG4gICAgICAgIFtcbiAgICAgICAgICBcImxpXCIsXG4gICAgICAgICAgW1xuICAgICAgICAgICAgXCJwXCIsXG4gICAgICAgICAgICBbXG4gICAgICAgICAgICAgIFwiY29kZVwiLFxuICAgICAgICAgICAgICBcIm1lc3NhZ2Uuc3VjY2Vzcyhjb250ZW50LCBkdXJhdGlvbilcIlxuICAgICAgICAgICAgXVxuICAgICAgICAgIF1cbiAgICAgICAgXSxcbiAgICAgICAgW1xuICAgICAgICAgIFwibGlcIixcbiAgICAgICAgICBbXG4gICAgICAgICAgICBcInBcIixcbiAgICAgICAgICAgIFtcbiAgICAgICAgICAgICAgXCJjb2RlXCIsXG4gICAgICAgICAgICAgIFwibWVzc2FnZS5lcnJvcihjb250ZW50LCBkdXJhdGlvbilcIlxuICAgICAgICAgICAgXVxuICAgICAgICAgIF1cbiAgICAgICAgXSxcbiAgICAgICAgW1xuICAgICAgICAgIFwibGlcIixcbiAgICAgICAgICBbXG4gICAgICAgICAgICBcInBcIixcbiAgICAgICAgICAgIFtcbiAgICAgICAgICAgICAgXCJjb2RlXCIsXG4gICAgICAgICAgICAgIFwibWVzc2FnZS5pbmZvKGNvbnRlbnQsIGR1cmF0aW9uKVwiXG4gICAgICAgICAgICBdXG4gICAgICAgICAgXVxuICAgICAgICBdLFxuICAgICAgICBbXG4gICAgICAgICAgXCJsaVwiLFxuICAgICAgICAgIFtcbiAgICAgICAgICAgIFwicFwiLFxuICAgICAgICAgICAgW1xuICAgICAgICAgICAgICBcImNvZGVcIixcbiAgICAgICAgICAgICAgXCJtZXNzYWdlLndhcm5pbmcoY29udGVudCwgZHVyYXRpb24pXCJcbiAgICAgICAgICAgIF1cbiAgICAgICAgICBdXG4gICAgICAgIF0sXG4gICAgICAgIFtcbiAgICAgICAgICBcImxpXCIsXG4gICAgICAgICAgW1xuICAgICAgICAgICAgXCJwXCIsXG4gICAgICAgICAgICBbXG4gICAgICAgICAgICAgIFwiY29kZVwiLFxuICAgICAgICAgICAgICBcIm1lc3NhZ2UubG9hZGluZyhjb250ZW50LCBkdXJhdGlvbilcIlxuICAgICAgICAgICAgXVxuICAgICAgICAgIF1cbiAgICAgICAgXVxuICAgICAgXVxuICAgIF0sXG4gICAgXCJlbi1VU1wiOiBbXVxuICB9LFxuICBcIm1ldGFcIjoge1xuICAgIFwib3JkZXJcIjogNCxcbiAgICBcInRpdGxlXCI6IHtcbiAgICAgIFwiemgtQ05cIjogXCLkvb/nlKjohJrmnKzosIPnlKhcIixcbiAgICAgIFwiZW4tVVNcIjogXCJUeXBlXCJcbiAgICB9LFxuICAgIFwiZmlsZW5hbWVcIjogXCJzcmMvY29tcG9uZW50cy9NZXNzYWdlL2RlbW8vanMtY2FsbC5tZFwiLFxuICAgIFwiaWRcIjogXCJzcmMtY29tcG9uZW50cy1NZXNzYWdlLWRlbW8tanMtY2FsbFwiXG4gIH0sXG4gIFwidG9jXCI6IFtcbiAgICBcInVsXCIsXG4gICAgW1xuICAgICAgXCJsaVwiLFxuICAgICAgW1xuICAgICAgICBcImFcIixcbiAgICAgICAge1xuICAgICAgICAgIFwiaHJlZlwiOiBcIiN6aC1DTlwiXG4gICAgICAgIH0sXG4gICAgICAgIFwiemgtQ05cIlxuICAgICAgXVxuICAgIF0sXG4gICAgW1xuICAgICAgXCJsaVwiLFxuICAgICAgW1xuICAgICAgICBcImFcIixcbiAgICAgICAge1xuICAgICAgICAgIFwiaHJlZlwiOiBcIiNlbi1VU1wiXG4gICAgICAgIH0sXG4gICAgICAgIFwiZW4tVVNcIlxuICAgICAgXVxuICAgIF1cbiAgXSxcbiAgXCJoaWdobGlnaHRlZENvZGVcIjogW1xuICAgIFwicHJlXCIsXG4gICAge1xuICAgICAgXCJsYW5nXCI6IFwianN4XCIsXG4gICAgICBcImhpZ2hsaWdodGVkXCI6IFwiPHNwYW4gY2xhc3M9XFxcInRva2VuIG9wZXJhdG9yXFxcIiA+Jmx0Ozwvc3Bhbj52PHNwYW4gY2xhc3M9XFxcInRva2VuIG9wZXJhdG9yXFxcIiA+LTwvc3Bhbj5idXR0b24gQGNsaWNrPHNwYW4gY2xhc3M9XFxcInRva2VuIG9wZXJhdG9yXFxcIiA+PTwvc3Bhbj48c3BhbiBjbGFzcz1cXFwidG9rZW4gc3RyaW5nXFxcIiA+XFxcInNob3dNZXNzYWdlXFxcIjwvc3Bhbj48c3BhbiBjbGFzcz1cXFwidG9rZW4gb3BlcmF0b3JcXFwiID4+PC9zcGFuPlxcbiAg54K55oiR5Lya5by55Ye65o+Q56S6XFxuPHNwYW4gY2xhc3M9XFxcInRva2VuIHRhZ1xcXCIgPjxzcGFuIGNsYXNzPVxcXCJ0b2tlbiB0YWdcXFwiID48c3BhbiBjbGFzcz1cXFwidG9rZW4gcHVuY3R1YXRpb25cXFwiID4mbHQ7Lzwvc3Bhbj52LWJ1dHRvbjwvc3Bhbj48c3BhbiBjbGFzcz1cXFwidG9rZW4gcHVuY3R1YXRpb25cXFwiID4+PC9zcGFuPjwvc3Bhbj5cIlxuICAgIH1cbiAgXSxcbiAgXCJwcmV2aWV3XCI6IFwiPHYtYnV0dG9uIEBjbGljaz1cXFwic2hvd01lc3NhZ2VcXFwiPlxcbiAg54K55oiR5Lya5by55Ye65o+Q56S6XFxuPC92LWJ1dHRvbj5cIixcbiAgXCJ2dWVTY3JpcHRcIjogXCJuZXcgVnVlKHtcXG4gIGVsOiAnYm9keScsXFxuICBjb21wb25lbnRzOiB7XFxuICAgIHZCdXR0b246IGF0dWkuQnV0dG9uXFxuICB9LFxcbiAgbWV0aG9kczoge1xcbiAgICBzaG93TWVzc2FnZSAoKSB7XFxuICAgICAgYXR1aS5NZXNzYWdlLnN1Y2Nlc3MoJ+aIkOWKn+WVpicpXFxuICAgIH1cXG4gIH1cXG5cXG59KVwiXG59O1xuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL2NvbXBvbmVudHMvTWVzc2FnZS9kZW1vL2pzLWNhbGwubWRcbiAqKi8iXSwic291cmNlUm9vdCI6IiJ9