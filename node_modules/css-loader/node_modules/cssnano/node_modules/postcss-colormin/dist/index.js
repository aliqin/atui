'use strict';

Object.defineProperty(exports, '__esModule', {
    value: true
});

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var _postcss = require('postcss');

var _postcss2 = _interopRequireDefault(_postcss);

var _postcssValueParser = require('postcss-value-parser');

var _postcssValueParser2 = _interopRequireDefault(_postcssValueParser);

var _libColormin = require('./lib/colormin');

var _libColormin2 = _interopRequireDefault(_libColormin);

function extractColorArguments(nodes) {
    var result = [];
    for (var i = 0, max = nodes.length; i < max; i += 1) {
        if (nodes[i].type === 'word') {
            var val = parseFloat(nodes[i].value);
            if (isNaN(val)) {
                return false;
            }
            result.push(val);
        }
    }

    return result;
}

function reduceColor(decl) {
    decl.value = (0, _postcssValueParser2['default'])(decl.value).walk(function (node) {
        if (node.type === 'function') {
            if (/^(rgb|hsl)a?$/.test(node.value)) {
                var args = extractColorArguments(node.nodes);
                if (args) {
                    node.value = (0, _libColormin2['default'])(node.value, args);
                    node.type = 'word';
                }
            }
        } else if (node.type === 'word') {
            node.value = (0, _libColormin2['default'])(node.value);
        }
    }).toString();
}

function reduceWhitespaces(decl) {
    decl.value = (0, _postcssValueParser2['default'])(decl.value).walk(function (node) {
        if (node.type === 'function' || node.type === 'div') {
            node.before = node.after = '';
        }
    }).toString();
}

function transform(decl) {
    if (decl.prop === '-webkit-tap-highlight-color') {
        if (decl.value === 'inherit' || decl.value === 'transparent') {
            return;
        }
        reduceWhitespaces(decl);
    } else if (/^(?!font|filter)/.test(decl.prop)) {
        reduceColor(decl);
    }
}

exports['default'] = _postcss2['default'].plugin('postcss-colormin', function () {
    return function (css) {
        css.walkDecls(transform);
    };
});
module.exports = exports['default'];